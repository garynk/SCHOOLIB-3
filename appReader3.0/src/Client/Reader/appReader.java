/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.Reader;

import Checker.Checker;

import javax.swing.*;
import javax.swing.border.MatteBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.RemoteException;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import static javax.swing.JOptionPane.YES_NO_OPTION;

/**
 *
 * @author Lorenzo Gavazzeni
 */
public class appReader extends javax.swing.JFrame {

    private static final int MAX_ROW_PER_PAGE = 10;

    private Vector<Vector<Vector<Object>>> page_vector;
    private Vector<String> Columns;
    private int PageTableIndex = 0;

    private static Reader local_reader;

    public appReader(Reader reader_user_loggedin) {

        local_reader = reader_user_loggedin;

        initComponents();

        try {
            initBackEnd();
        } catch (RemoteException ex) {
            Logger.getLogger(appReader.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private appReader() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ModifyDialog = new javax.swing.JDialog(this);
        ModifyLayer1 = new javax.swing.JPanel();
        ModifyTitle = new javax.swing.JLabel();
        UserLockedInfo = new javax.swing.JPanel();
        staticLabelID = new javax.swing.JLabel();
        DynamicLabelID = new javax.swing.JLabel();
        staticLabelNome = new javax.swing.JLabel();
        DynamicLabelNome = new javax.swing.JLabel();
        staticLabelCognome = new javax.swing.JLabel();
        DynamicLabelCognome = new javax.swing.JLabel();
        UserEditableInfo = new javax.swing.JPanel();
        staticLabelNumber = new javax.swing.JLabel();
        DynamicLabelNumber = new javax.swing.JLabel();
        staticLabelInquadramento = new javax.swing.JLabel();
        DynamicLabelInquadramento = new javax.swing.JLabel();
        staticLabelEmail = new javax.swing.JLabel();
        DynamicLabelEmail = new javax.swing.JLabel();
        ModifyEmailTextField = new javax.swing.JTextField();
        ModifyNumberTextField = new javax.swing.JTextField();
        ModifyInquadTextField = new javax.swing.JTextField();
        oldvalLabel = new javax.swing.JLabel();
        newvalLabel = new javax.swing.JLabel();
        PasswordModifyContext = new javax.swing.JPanel();
        TitoloCambioPsw = new javax.swing.JLabel();
        oldPswLabel = new javax.swing.JLabel();
        OldPasswordTxtField = new javax.swing.JPasswordField();
        newPswLabel = new javax.swing.JLabel();
        NewPasswordTextField = new javax.swing.JPasswordField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        PSWConfirmButton = new javax.swing.JButton();
        ModifyConfirmButton = new javax.swing.JButton();
        ModifyExitButton = new javax.swing.JButton();
        ModifyReporterLabel = new javax.swing.JLabel();
        DeleteAccButton = new javax.swing.JButton();
        AskinDeletingOptionPane = new javax.swing.JOptionPane();
        appMainPanel = new javax.swing.JPanel();
        UserContextPanel = new javax.swing.JPanel();
        RuoloLabel = new javax.swing.JLabel();
        DynamicRuolo = new javax.swing.JLabel();
        CodiceLabel = new javax.swing.JLabel();
        DynamicCodice = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        NomeLabel = new javax.swing.JLabel();
        DynamicNome = new javax.swing.JLabel();
        CognomeLabel = new javax.swing.JLabel();
        DynamicCognome = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        DynamicEmail = new javax.swing.JLabel();
        NumeroLabel = new javax.swing.JLabel();
        DynamicNumero = new javax.swing.JLabel();
        TitleUserLabel = new javax.swing.JLabel();
        ModifyButton = new javax.swing.JButton();
        TitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BooksTable = new javax.swing.JTable();
        NextPageButton = new javax.swing.JButton();
        PreviousButton = new javax.swing.JButton();
        PageNumLabel = new javax.swing.JLabel();
        RefreshButton = new javax.swing.JButton();
        PrenotaButton = new javax.swing.JButton();
        DisdiciButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        HeaderPanel = new javax.swing.JPanel();
        SearchButton = new javax.swing.JButton();
        SearchTextField = new javax.swing.JTextField();
        prenotazioniButton = new javax.swing.JButton();
        prestitiButton = new javax.swing.JButton();

        ModifyDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ModifyDialog.setTitle("Modifica Informazioni");
        ModifyDialog.setAlwaysOnTop(true);
        ModifyDialog.setBackground(ReaderStyle.BACKGROUD_DEFAULT_1);
        ModifyDialog.setBounds(new java.awt.Rectangle(0, 0, 500, 350));
        ModifyDialog.setFocusable(false);
        ModifyDialog.setFont(ReaderStyle.LABEL_FONT_3);
        ModifyDialog.setLocation(getLocation());
        ModifyDialog.setMinimumSize(new java.awt.Dimension(428, 600));
        ModifyDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        ModifyDialog.setName("LibrarianModifyForm"); // NOI18N
        ModifyDialog.setResizable(false);
        ModifyDialog.setSize(new java.awt.Dimension(930, 530));

        ModifyLayer1.setBackground(ReaderStyle.BACKGROUD_DEFAULT_2);
        ModifyLayer1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ModifyLayer1.setFont(ReaderStyle.LABEL_FONT_3);
        ModifyLayer1.setPreferredSize(new java.awt.Dimension(930, 530));

        ModifyTitle.setFont(ReaderStyle.MEDIUM_TITLE_FONT);
        ModifyTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ModifyTitle.setLabelFor(ModifyDialog);
        ModifyTitle.setText("AppReader - Modifica");

        UserLockedInfo.setBackground(ReaderStyle.BACKGROUD_DEFAULT_1);
        UserLockedInfo.setFont(ReaderStyle.LABEL_FONT_2);

        staticLabelID.setBackground(ModifyLayer1.getBackground());
        staticLabelID.setFont(UserLockedInfo.getFont());
        staticLabelID.setText("UserID:");

        DynamicLabelID.setBackground(ModifyLayer1.getBackground());
        DynamicLabelID.setFont(UserLockedInfo.getFont());
        DynamicLabelID.setText(local_reader.GetParamUser().GetUserID());

        staticLabelNome.setBackground(ModifyLayer1.getBackground());
        staticLabelNome.setFont(UserLockedInfo.getFont());
        staticLabelNome.setText("Nome: ");

        DynamicLabelNome.setBackground(ModifyLayer1.getBackground());
        DynamicLabelNome.setFont(UserLockedInfo.getFont());
        DynamicLabelNome.setText(local_reader.GetParamUser().GetNome());

        staticLabelCognome.setBackground(ModifyLayer1.getBackground());
        staticLabelCognome.setFont(UserLockedInfo.getFont());
        staticLabelCognome.setText("Cognome: ");

        DynamicLabelCognome.setBackground(ModifyLayer1.getBackground());
        DynamicLabelCognome.setFont(UserLockedInfo.getFont());
        DynamicLabelCognome.setText(local_reader.GetParamUser().GetCognome());

        javax.swing.GroupLayout UserLockedInfoLayout = new javax.swing.GroupLayout(UserLockedInfo);
        UserLockedInfo.setLayout(UserLockedInfoLayout);
        UserLockedInfoLayout.setHorizontalGroup(
            UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLockedInfoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staticLabelCognome, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DynamicLabelID)
                    .addComponent(DynamicLabelCognome)
                    .addComponent(DynamicLabelNome))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        UserLockedInfoLayout.setVerticalGroup(
            UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLockedInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelID)
                    .addComponent(DynamicLabelID))
                .addGap(18, 18, 18)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelNome)
                    .addComponent(DynamicLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelCognome)
                    .addComponent(DynamicLabelCognome, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        UserEditableInfo.setBackground(ReaderStyle.BACKGROUD_DEFAULT_1);
        UserEditableInfo.setFont(ReaderStyle.LABEL_FONT_2);

        staticLabelNumber.setBackground(ModifyLayer1.getBackground());
        staticLabelNumber.setFont(UserLockedInfo.getFont());
        staticLabelNumber.setText("Numero:");

        DynamicLabelNumber.setBackground(ModifyLayer1.getBackground());
        DynamicLabelNumber.setFont(UserLockedInfo.getFont());
        DynamicLabelNumber.setText(local_reader.GetParamUser().GetNumeroTelefono());

        staticLabelInquadramento.setBackground(ModifyLayer1.getBackground());
        staticLabelInquadramento.setFont(UserLockedInfo.getFont());
        staticLabelInquadramento.setText("Inquadramento: ");

        DynamicLabelInquadramento.setBackground(ModifyLayer1.getBackground());
        DynamicLabelInquadramento.setFont(UserLockedInfo.getFont());
        DynamicLabelInquadramento.setText(local_reader.GetParamUser().GetInquadramento());

        staticLabelEmail.setBackground(ModifyLayer1.getBackground());
        staticLabelEmail.setFont(UserLockedInfo.getFont());
        staticLabelEmail.setText("Email:");

        DynamicLabelEmail.setBackground(ModifyLayer1.getBackground());
        DynamicLabelEmail.setFont(UserLockedInfo.getFont());
        DynamicLabelEmail.setText(local_reader.GetParamUser().GetEmail());

        ModifyEmailTextField.setBackground(UserEditableInfo.getBackground());
        ModifyEmailTextField.setFont(ReaderStyle.LABEL_FONT_3);
        ModifyEmailTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        ModifyNumberTextField.setBackground(UserEditableInfo.getBackground());
        ModifyNumberTextField.setFont(ReaderStyle.LABEL_FONT_3);
        ModifyNumberTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        ModifyInquadTextField.setBackground(UserEditableInfo.getBackground());
        ModifyInquadTextField.setFont(ReaderStyle.LABEL_FONT_3);
        ModifyInquadTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout UserEditableInfoLayout = new javax.swing.GroupLayout(UserEditableInfo);
        UserEditableInfo.setLayout(UserEditableInfoLayout);
        UserEditableInfoLayout.setHorizontalGroup(
            UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserEditableInfoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staticLabelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelInquadramento, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DynamicLabelEmail)
                    .addComponent(DynamicLabelInquadramento)
                    .addComponent(DynamicLabelNumber))
                .addGap(78, 78, 78)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ModifyNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(ModifyEmailTextField)
                    .addComponent(ModifyInquadTextField))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        UserEditableInfoLayout.setVerticalGroup(
            UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserEditableInfoLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelEmail)
                    .addComponent(DynamicLabelEmail)
                    .addComponent(ModifyEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelNumber)
                    .addComponent(DynamicLabelNumber)
                    .addComponent(ModifyNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelInquadramento)
                    .addComponent(DynamicLabelInquadramento, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ModifyInquadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        oldvalLabel.setFont(UserEditableInfo.getFont());
        oldvalLabel.setText("valore attuale");

        newvalLabel.setFont(UserEditableInfo.getFont());
        newvalLabel.setText("nuovo valore");

        PasswordModifyContext.setBackground(UserEditableInfo.getBackground());
        PasswordModifyContext.setFont(UserEditableInfo.getFont());

        TitoloCambioPsw.setFont(ReaderStyle.LABEL_FONT);
        TitoloCambioPsw.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitoloCambioPsw.setLabelFor(PasswordModifyContext);
        TitoloCambioPsw.setText("Cambio Password");

        oldPswLabel.setFont(ReaderStyle.LABEL_FONT_2);
        oldPswLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        oldPswLabel.setText("Vecchia Password: ");

        OldPasswordTxtField.setBackground(PasswordModifyContext.getBackground());
        OldPasswordTxtField.setFont(ReaderStyle.LABEL_FONT_3);
        OldPasswordTxtField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        OldPasswordTxtField.setToolTipText("password");
        OldPasswordTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        OldPasswordTxtField.setEchoChar('\u2022');
        OldPasswordTxtField.setName("passwordTextField"); // NOI18N
        OldPasswordTxtField.setSelectionColor(new java.awt.Color(153, 153, 255));

        newPswLabel.setFont(ReaderStyle.LABEL_FONT_2);
        newPswLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newPswLabel.setText("Nuova Password:");

        NewPasswordTextField.setBackground(PasswordModifyContext.getBackground());
        NewPasswordTextField.setFont(ReaderStyle.LABEL_FONT_3);
        NewPasswordTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NewPasswordTextField.setToolTipText("password");
        NewPasswordTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        NewPasswordTextField.setEchoChar('\u2022');
        NewPasswordTextField.setName("passwordTextField"); // NOI18N
        NewPasswordTextField.setSelectionColor(new java.awt.Color(153, 153, 255));

        PSWConfirmButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        PSWConfirmButton.setFont(ReaderStyle.BUTTON_FONT);
        PSWConfirmButton.setText("Conferma");
        PSWConfirmButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PSWConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PSWConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSWConfirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PasswordModifyContextLayout = new javax.swing.GroupLayout(PasswordModifyContext);
        PasswordModifyContext.setLayout(PasswordModifyContextLayout);
        PasswordModifyContextLayout.setHorizontalGroup(
            PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(TitoloCambioPsw, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(NewPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                                .addComponent(oldPswLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                                .addComponent(OldPasswordTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                                .addComponent(newPswLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                        .addComponent(PSWConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))))
        );
        PasswordModifyContextLayout.setVerticalGroup(
            PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitoloCambioPsw, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(oldPswLabel)
                .addGap(18, 18, 18)
                .addComponent(OldPasswordTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(newPswLabel)
                .addGap(18, 18, 18)
                .addComponent(NewPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PSWConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PSWConfirmButton.getAccessibleContext().setAccessibleName("ConfermationPswButton");

        ModifyConfirmButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        ModifyConfirmButton.setFont(ReaderStyle.BUTTON_FONT);
        ModifyConfirmButton.setText("Conferma");
        ModifyConfirmButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ModifyConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ModifyConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyConfirmButtonActionPerformed(evt);
            }
        });

        ModifyExitButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        ModifyExitButton.setFont(ReaderStyle.BUTTON_FONT);
        ModifyExitButton.setText("Esci");
        ModifyExitButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ModifyExitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ModifyExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyExitButtonActionPerformed(evt);
            }
        });

        ModifyReporterLabel.setFont(ReaderStyle.EXCEPTION_FONT);
        ModifyReporterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ModifyReporterLabel.setText("REPORTERRRRRRRRRRRRRRRRRRRRRRRRR");

        DeleteAccButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        DeleteAccButton.setFont(ReaderStyle.BUTTON_FONT);
        DeleteAccButton.setText("Elimina");
        DeleteAccButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DeleteAccButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteAccButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAccButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ModifyLayer1Layout = new javax.swing.GroupLayout(ModifyLayer1);
        ModifyLayer1.setLayout(ModifyLayer1Layout);
        ModifyLayer1Layout.setHorizontalGroup(
            ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ModifyLayer1Layout.createSequentialGroup()
                        .addComponent(ModifyTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ModifyLayer1Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(ModifyExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ModifyConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ModifyLayer1Layout.createSequentialGroup()
                        .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(oldvalLabel)
                                .addGap(119, 119, 119)
                                .addComponent(newvalLabel))
                            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                                .addComponent(UserLockedInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(DeleteAccButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(UserEditableInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PasswordModifyContext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ModifyLayer1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ModifyReporterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(270, 270, 270))
        );
        ModifyLayer1Layout.setVerticalGroup(
            ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(ModifyTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ModifyLayer1Layout.createSequentialGroup()
                        .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UserLockedInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteAccButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(oldvalLabel)
                            .addComponent(newvalLabel))
                        .addGap(18, 18, 18)
                        .addComponent(UserEditableInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PasswordModifyContext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(ModifyReporterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ModifyConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(ModifyExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        AskinDeletingOptionPane.setBackground(ReaderStyle.BACKGROUD_DEFAULT_1);
        AskinDeletingOptionPane.setMessage("Sei sicuro di eliminare questo account ?");
        AskinDeletingOptionPane.setFont(ReaderStyle.DISCORSIVE_LABEL_FONT);

        javax.swing.GroupLayout ModifyDialogLayout = new javax.swing.GroupLayout(ModifyDialog.getContentPane());
        ModifyDialog.getContentPane().setLayout(ModifyDialogLayout);
        ModifyDialogLayout.setHorizontalGroup(
            ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ModifyLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
            .addGroup(ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ModifyDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(AskinDeletingOptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        ModifyDialogLayout.setVerticalGroup(
            ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ModifyLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .addGroup(ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ModifyDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(AskinDeletingOptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("App Reader");
        setMinimumSize(new java.awt.Dimension(1025, 505));
        setName("app Reader"); // NOI18N
        setResizable(false);

        appMainPanel.setBackground(ReaderStyle.BACKGROUD_DEFAULT_2);

        UserContextPanel.setBackground(ReaderStyle.BACKGROUD_DEFAULT_1);
        UserContextPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 51, 153)));
        UserContextPanel.setFont(ReaderStyle.LABEL_FONT_3);

        RuoloLabel.setFont(UserContextPanel.getFont());
        RuoloLabel.setText("Ruolo: ");

        DynamicRuolo.setFont(UserContextPanel.getFont());
        DynamicRuolo.setText(local_reader.GetParamUser().GetInquadramento());

        CodiceLabel.setFont(UserContextPanel.getFont());
        CodiceLabel.setText("Codice: ");

        DynamicCodice.setFont(UserContextPanel.getFont());
        DynamicCodice.setText(local_reader.GetParamUser().GetUserID());

        NomeLabel.setFont(UserContextPanel.getFont());
        NomeLabel.setText("Nome:");

        DynamicNome.setFont(UserContextPanel.getFont());
        DynamicNome.setText(local_reader.GetParamUser().GetNome());

        CognomeLabel.setFont(UserContextPanel.getFont());
        CognomeLabel.setText("Cognome: ");

        DynamicCognome.setFont(UserContextPanel.getFont());
        DynamicCognome.setText(local_reader.GetParamUser().GetCognome());

        EmailLabel.setFont(UserContextPanel.getFont());
        EmailLabel.setText("Email: ");

        DynamicEmail.setFont(UserContextPanel.getFont());
        DynamicEmail.setText(local_reader.GetParamUser().GetEmail());

        NumeroLabel.setFont(UserContextPanel.getFont());
        NumeroLabel.setText("Numero: ");

        DynamicNumero.setFont(UserContextPanel.getFont());
        DynamicNumero.setText(local_reader.GetParamUser().GetNumeroTelefono());

        TitleUserLabel.setFont(ReaderStyle.LABEL_FONT);
        TitleUserLabel.setText("DATI UTENTE:");

        ModifyButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        ModifyButton.setFont(ReaderStyle.BUTTON_FONT);
        ModifyButton.setText("Modifica");
        ModifyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserContextPanelLayout = new javax.swing.GroupLayout(UserContextPanel);
        UserContextPanel.setLayout(UserContextPanelLayout);
        UserContextPanelLayout.setHorizontalGroup(
            UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserContextPanelLayout.createSequentialGroup()
                        .addComponent(TitleUserLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(UserContextPanelLayout.createSequentialGroup()
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RuoloLabel)
                            .addComponent(CodiceLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DynamicRuolo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DynamicCodice, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(56, 56, 56))
                    .addGroup(UserContextPanelLayout.createSequentialGroup()
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CognomeLabel)
                            .addComponent(NomeLabel)
                            .addComponent(EmailLabel)
                            .addComponent(NumeroLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DynamicNome)
                            .addComponent(DynamicCognome)
                            .addComponent(DynamicEmail)
                            .addComponent(DynamicNumero))
                        .addGap(63, 63, 63))))
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(ModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UserContextPanelLayout.setVerticalGroup(
            UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleUserLabel)
                .addGap(26, 26, 26)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RuoloLabel)
                    .addComponent(DynamicRuolo))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodiceLabel)
                    .addComponent(DynamicCodice))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeLabel)
                    .addComponent(DynamicNome))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CognomeLabel)
                    .addComponent(DynamicCognome))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailLabel)
                    .addComponent(DynamicEmail))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumeroLabel)
                    .addComponent(DynamicNumero))
                .addGap(43, 43, 43)
                .addComponent(ModifyButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TitleLabel.setBackground(appMainPanel.getBackground());
        TitleLabel.setFont(ReaderStyle.BIG_TITLE_FONT);
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setLabelFor(this);
        TitleLabel.setText("App Reader");
        TitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TitleLabel.setNextFocusableComponent(appMainPanel);

        BooksTable.setFont(ReaderStyle.LABEL_FONT_3);
        BooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Titolo", "Autore", "Categoria"
            }
        ));
        BooksTable.setGridColor(ReaderStyle.BACKGROUD_DEFAULT_1);
        BooksTable.setSelectionBackground(ReaderStyle.BACKGROUD_DEFAULT_1);
        BooksTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        BooksTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(BooksTable);
        BooksTable.getAccessibleContext().setAccessibleName("BooksTable");

        NextPageButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        NextPageButton.setFont(ReaderStyle.BUTTON_FONT);
        NextPageButton.setText("next >");
        NextPageButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NextPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextPageButtonActionPerformed(evt);
            }
        });

        PreviousButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        PreviousButton.setFont(ReaderStyle.BUTTON_FONT);
        PreviousButton.setText("< prev");
        PreviousButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PreviousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousButtonActionPerformed(evt);
            }
        });

        PageNumLabel.setFont(ReaderStyle.LABEL_FONT_2);
        PageNumLabel.setText("P");

        RefreshButton.setIcon(new javax.swing.ImageIcon("/Client/recycle_icon_1.jpg")); // NOI18N
        RefreshButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        RefreshButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        PrenotaButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        PrenotaButton.setFont(ReaderStyle.BUTTON_FONT);
        PrenotaButton.setText("Prenota");
        PrenotaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrenotaButtonActionPerformed(evt);
            }
        });

        DisdiciButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        DisdiciButton.setFont(ReaderStyle.BUTTON_FONT);
        DisdiciButton.setText("Disdici");
        DisdiciButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisdiciButtonActionPerformed(evt);
            }
        });

        SearchButton.setIcon(new javax.swing.ImageIcon("/Client/search_icon_1.jpg")); // NOI18N
        SearchButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SearchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SearchButton.setMinimumSize(new java.awt.Dimension(35, 35));
        SearchButton.setPreferredSize(new java.awt.Dimension(30, 30));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        SearchTextField.setFont(ReaderStyle.LABEL_FONT_2);
        SearchTextField.setText("cerca");
        SearchTextField.setToolTipText("");

        prenotazioniButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        prenotazioniButton.setFont(ReaderStyle.BUTTON_FONT);
        prenotazioniButton.setText("Prenotazioni");
        prenotazioniButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenotazioniButtonActionPerformed(evt);
            }
        });

        prestitiButton.setBackground(ReaderStyle.BUTTON_DEFAULT_COLOR);
        prestitiButton.setFont(ReaderStyle.BUTTON_FONT);
        prestitiButton.setText("Prestiti");
        prestitiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prestitiButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanel.setBackground(ReaderStyle.BACKGROUD_DEFAULT_1);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prenotazioniButton)
                .addGap(18, 18, 18)
                .addComponent(prestitiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(prenotazioniButton)
                        .addComponent(prestitiButton))
                    .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(SearchTextField)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SearchTextField.getAccessibleContext().setAccessibleName("SearchTextField");

        javax.swing.GroupLayout appMainPanelLayout = new javax.swing.GroupLayout(appMainPanel);
        appMainPanel.setLayout(appMainPanelLayout);
        appMainPanelLayout.setHorizontalGroup(
            appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appMainPanelLayout.createSequentialGroup()
                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appMainPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(PrenotaButton)
                        .addGap(28, 28, 28)
                        .addComponent(DisdiciButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260)
                        .addComponent(PreviousButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PageNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(NextPageButton))
                    .addGroup(appMainPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appMainPanelLayout.createSequentialGroup()
                                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(appMainPanelLayout.createSequentialGroup()
                                        .addComponent(UserContextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(9, 9, 9))
                                    .addGroup(appMainPanelLayout.createSequentialGroup()
                                        .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(64, 64, 64)))
                                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(HeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE))))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        appMainPanelLayout.setVerticalGroup(
            appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appMainPanelLayout.createSequentialGroup()
                        .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appMainPanelLayout.createSequentialGroup()
                        .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appMainPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(NextPageButton)
                                .addComponent(PageNumLabel)
                                .addComponent(PreviousButton)
                                .addComponent(PrenotaButton)
                                .addComponent(DisdiciButton))))
                    .addComponent(UserContextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        UserContextPanel.getAccessibleContext().setAccessibleName("UserContextPanel");
        PrenotaButton.getAccessibleContext().setAccessibleName("PrenotaButton");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("AppReader");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initBackEnd() throws RemoteException {
        NormalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_reader.BuilderBookTableModel());
        BooksTable.repaint();

        SetPrenotaBookTableListener();
        SetDisdiciBookTableListener();

        SetCurrentPage(PageNumLabel,PageTableIndex);

        SetModifyDialog();

        PrenotaButton.setEnabled(false);
        DisdiciButton.setEnabled(false);

    }

   private void NormalizejTable(javax.swing.JTable generic_table,
            javax.swing.JButton prev_associated,
            javax.swing.JButton next_associated,
            javax.swing.JLabel page_index_label,
            int page_num,
            DefaultTableModel model) {

        PageTableIndex = 0;
        SetCurrentPage( page_index_label, page_num);

        Columns = new Vector<>();

        for (int i = 0; i < model.getColumnCount(); i++) {
            Columns.add(model.getColumnName(i));
        }

        Vector<Vector<Object>> all_elem = new Vector<>();

        if (model.getRowCount() <= MAX_ROW_PER_PAGE) {
            generic_table.setModel(model);

            next_associated.setEnabled(false);
            prev_associated.setEnabled(false);
        } else {

            all_elem = model.getDataVector();

            page_vector = new Vector<>();

            Vector<Vector<Object>> vect = new Vector<>();

            int left_elements = all_elem.size();
            int cycle = 1;

            for (int i = 0; i < all_elem.size(); i++) {
                vect.add(all_elem.elementAt(i));

                left_elements--;

                if (left_elements == all_elem.size() - MAX_ROW_PER_PAGE * cycle) {
                    page_vector.add(vect);
                    vect = new Vector<>();
                    cycle++;
                } else if (left_elements == 0) {
                    page_vector.add(vect);
                }
            }

            generic_table.setModel(new DefaultTableModel(page_vector.elementAt(PageTableIndex), Columns));

            prev_associated.setEnabled(false);

            if (page_vector.size() > 1) {
                next_associated.setEnabled(true);
            }

        }
    }

    private void SetPrenotaBookTableListener() {
        BooksTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                SwingUtilities.invokeLater(
                        new Runnable() {
                    public void run() {
                        PrenotaButton.setEnabled(true);
                    }
                });
            }
        });
    }

    private void SetDisdiciBookTableListener() {
        BooksTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                SwingUtilities.invokeLater(() -> {
                            String selected_ISBN = getSelectedISBNFromBooksTable();

                            if (local_reader.Check_Existing_Easy_PrenPres(selected_ISBN, local_reader.GetParamUser().GetUserID(), 4)) {
                                DisdiciButton.setEnabled(true);
                            } else {
                                DisdiciButton.setEnabled(false);
                            }
                        });
            }
        });
    }

    private void SetModifyCloseSafe() {
        ModifyDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ModifyDialog.getParent().setEnabled(true);
                ModifyDialog.getParent().setVisible(true);
            }
        });
    }

     private void SetCurrentPage(javax.swing.JLabel label_page_num, int index) {
        label_page_num.setText(Integer.toString(index + 1));
    }


    private void SetModifyDialog() {

        OldPasswordTxtField.setText("");
        NewPasswordTextField.setText("");
        ModifyEmailTextField.setText("");
        ModifyNumberTextField.setText("");
        ModifyInquadTextField.setText("");

        ModifyReporterLabel.setVisible(false);

        AskinDeletingOptionPane.setVisible(false);
        AskinDeletingOptionPane.setEnabled(false);

        SetModifyCloseSafe();
    }

    private String getSelectedISBNFromBooksTable()
    {
        if(BooksTable.getSelectedRow() == -1)
        {
            return "";
        }

        DefaultTableModel BookTableModel = (DefaultTableModel) BooksTable.getModel();

        String[] row_elements;

        Object obj = BookTableModel.getDataVector().elementAt(BooksTable.getSelectedRow());

        String obj_toString = obj.toString();
        String concrete_objString;

        concrete_objString = obj_toString.replace('[', '\0');
        concrete_objString = concrete_objString.replace(']', '\0');
        concrete_objString = concrete_objString.replace(' ', '\0');

        row_elements = concrete_objString.split(",");

        return row_elements[0];
    }

    private void RefreshGenericLabel(javax.swing.JLabel label_toUpadte, java.awt.Color color, String to_display) {
        try {
            Thread.sleep(400);
        } catch (InterruptedException ex) {
            Logger.getLogger(appReader.class.getName()).log(Level.SEVERE, null, ex);
        }

        new Thread(() -> {

                    label_toUpadte.setForeground(color);
                    label_toUpadte.setText(to_display);
                    label_toUpadte.setVisible(true);

                    label_toUpadte.getParent().revalidate();

                }).start();

    }

    private void ModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyButtonActionPerformed

        ModifyDialog.setLocationRelativeTo(this);
        ModifyDialog.setEnabled(true);
        ModifyDialog.setVisible(true);

        this.setEnabled(false);

    }//GEN-LAST:event_ModifyButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed

        NormalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_reader.GetLookedBooks(SearchTextField.getText()));

        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();

        PageTableIndex = 0;
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void NextPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextPageButtonActionPerformed

        PageTableIndex++;

        if (PageTableIndex + 1 == page_vector.size()) {
            NextPageButton.setEnabled(false);
        }

        BooksTable.clearSelection();

        BooksTable.setModel(new DefaultTableModel(page_vector.elementAt(PageTableIndex), Columns));

        PreviousButton.setEnabled(true);

        SetCurrentPage(PageNumLabel,PageTableIndex);

        BooksTable.getSelectionModel().clearSelection();
        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();
    }//GEN-LAST:event_NextPageButtonActionPerformed

    private void PreviousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousButtonActionPerformed

        PageTableIndex--;

        if (PageTableIndex == 0) {
            PreviousButton.setEnabled(false);
        }

        BooksTable.clearSelection();

        BooksTable.setModel(new DefaultTableModel(page_vector.elementAt(PageTableIndex), Columns));

        NextPageButton.setEnabled(true);

        SetCurrentPage(PageNumLabel,PageTableIndex);

        BooksTable.getSelectionModel().clearSelection();

        BooksTable.getSelectionModel().clearSelection();
        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();
    }//GEN-LAST:event_PreviousButtonActionPerformed

    private void PSWConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSWConfirmButtonActionPerformed

        MatteBorder exceptionborder = new MatteBorder(0, 0, 1, 0, ReaderStyle.EXCEPTION_COLOR);
        Checker check = new Checker();

        boolean changeable = false;

        if (local_reader.MatchingUserID_Password(local_reader.GetID(), OldPasswordTxtField.getPassword(), local_reader.GetParamUser().GetUserType())) {
            if (check.userChecker.checkPassword(NewPasswordTextField.getPassword()) == 0) {
                changeable = true;
            } else {

                RefreshGenericLabel(ModifyReporterLabel, ReaderStyle.EXCEPTION_COLOR, "Password nuova Errata");

                NewPasswordTextField.setBorder(exceptionborder);

                return;
            }
        } else {
            RefreshGenericLabel(ModifyReporterLabel, ReaderStyle.EXCEPTION_COLOR, "Password Vecchia non corrisponde");

            OldPasswordTxtField.setBorder(exceptionborder);

            return;
        }

        if (changeable) {
            local_reader.UpdateUserPassword(local_reader.GetID(), NewPasswordTextField.getPassword(), local_reader.GetParamUser().GetUserType());

            RefreshGenericLabel(ModifyReporterLabel, ReaderStyle.SUCCESS_COLOR, "Password Cambiata con Successo");
            local_reader.SendCommunicationServer("[READER-" + local_reader.GetID() + "] password modificata con successo");

            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(appReader.class.getName()).log(Level.SEVERE, null, ex);
            }

            SetModifyDialog();

            ModifyDialog.getParent().setVisible(false);
            ModifyDialog.removeWindowListener(ModifyDialog.getWindowListeners()[0]);
            ModifyDialog.dispose();

            this.setVisible(false);
            this.dispose();

            new appReaderLoginForm().setVisible(true);

        }

    }//GEN-LAST:event_PSWConfirmButtonActionPerformed

    private void ModifyConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyConfirmButtonActionPerformed

        MatteBorder exceptionborder = new MatteBorder(0, 0, 1, 0, ReaderStyle.EXCEPTION_COLOR);
        Checker check = new Checker();

        boolean CoreMod = false;
        int modified = 0;

        String success_message = "";

        if (check.userChecker.checkEmail(ModifyEmailTextField.getText()) == 0) {
            local_reader.UpdateUserInfo(local_reader.GetParamUser().GetUserID(), "EMAIL", ModifyEmailTextField.getText(), local_reader.GetDefaultType());

            success_message = success_message + "EMAIL -> " + ModifyEmailTextField.getText() + "\n";
            modified++;
            CoreMod = true;

        } else if (check.userChecker.checkEmail(ModifyEmailTextField.getText()) == 1) {
        } else {
            ModifyEmailTextField.setBorder(exceptionborder);

            RefreshGenericLabel(ModifyReporterLabel, ReaderStyle.EXCEPTION_COLOR, "Fromato Email non Valido");

        }

        if (check.userChecker.checkNumero(ModifyNumberTextField.getText()) == 0) {
            local_reader.UpdateUserInfo(local_reader.GetParamUser().GetUserID(), "NUMERO", ModifyNumberTextField.getText(), local_reader.GetDefaultType());

            success_message = success_message + "NUMERO -> " + ModifyNumberTextField.getText() + "\n";
            modified++;
        } else if (check.userChecker.checkNumero(ModifyNumberTextField.getText()) == 1) {
        } else {
            ModifyNumberTextField.setBorder(exceptionborder);

            RefreshGenericLabel(ModifyReporterLabel, ReaderStyle.EXCEPTION_COLOR, "Formato Numero non valido");
        }

/*        if (check.userChecker.checkInquadramento(ModifyInquadTextField.getText()) == 0) {
            local_reader.UpdateUserInfo(local_reader.GetParamUser().GetUserID(), "INQUADRAMENTO", ModifyInquadTextField.getText(), local_reader.GetDefaultType());

            success_message = success_message + "INQUADRAMENTO -> " + ModifyInquadTextField.getText() + "\n";
            modified++;
        } else if (check.userChecker.checkInquadramento(ModifyInquadTextField.getText()) == 1) {
        } else {
            ModifyInquadTextField.setBorder(exceptionborder);

            RefreshGenericLabel(ModifyReporterLabel, ReaderStyle.EXCEPTION_COLOR, "Formato Inquadramento non valido");
        }*/

        if (modified > 0) {
            RefreshGenericLabel(ModifyReporterLabel, ReaderStyle.SUCCESS_COLOR, success_message);
            local_reader.SendCommunicationServer("[READER-" + local_reader.GetID() + "] campi modificati: " + success_message);

            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(appReader.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (CoreMod) {
                local_reader.UpdateUserInfo(local_reader.GetParamUser().GetUserID(), "CONFIRMED", "0", local_reader.GetDefaultType());
                local_reader.UpdateUserInfo(local_reader.GetParamUser().GetUserID(), "CODICE", Arrays.toString(local_reader.GenerateUserCode(local_reader.GetParamUser().GetUserID())), local_reader.GetDefaultType());
                local_reader.UpdateUserInfo(local_reader.GetParamUser().GetUserID(), "TENTATIVI", "5", local_reader.GetDefaultType());

                local_reader.SendNewInformation(local_reader.GetParamUser().GetUserID(), success_message, local_reader.GetDefaultType());
                local_reader.SendConfirmationCode(local_reader.GetParamUser().GetUserID(), local_reader.GetDefaultType());

                ModifyDialog.getParent().setVisible(false);
                ModifyDialog.removeWindowListener(ModifyDialog.getWindowListeners()[0]);
                ModifyDialog.dispose();

                this.setVisible(false);
                this.dispose();

                new appReaderLoginForm().setVisible(true);
            } else {

                local_reader.SendNewInformation(local_reader.GetParamUser().GetUserID(), success_message, local_reader.GetDefaultType());

                ModifyDialog.setVisible(false);
                SetModifyDialog();
                this.setEnabled(true);
            }
        } else {
        }

    }//GEN-LAST:event_ModifyConfirmButtonActionPerformed

    private void ModifyExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyExitButtonActionPerformed

        ModifyDialog.setVisible(false);
        ModifyDialog.setEnabled(false);

        SetModifyDialog();

        ModifyDialog.getParent().setEnabled(true);
        ModifyDialog.getParent().setVisible(true);
    }//GEN-LAST:event_ModifyExitButtonActionPerformed

    private void DeleteAccButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAccButtonActionPerformed

        ModifyDialog.setEnabled(false);
        ModifyDialog.enableInputMethods(false);

        int result = AskinDeletingOptionPane.showConfirmDialog(ModifyDialog, "Sei sicuro di voler Eliminare questo Account ?");
        AskinDeletingOptionPane.setOptionType(YES_NO_OPTION);
        AskinDeletingOptionPane.setVisible(true);

        if (result == AskinDeletingOptionPane.YES_OPTION) {

            local_reader.DeleteUserAccount(local_reader.GetParamUser().GetUserID(), "USERID", local_reader.GetParamUser().GetUserType());
            local_reader.SendCommunicationServer("[READER-" + local_reader.GetID() + "] utente cancellato da utente");
            
            AskinDeletingOptionPane.setVisible(false);
            ModifyDialog.setVisible(false);
            this.setVisible(false);
            appReaderLoginForm app = new appReaderLoginForm();
            app.setVisible(true);
        } else {

            ModifyDialog.setEnabled(true);

            AskinDeletingOptionPane.setEnabled(false);
            AskinDeletingOptionPane.setVisible(false);

        }

    }//GEN-LAST:event_DeleteAccButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed

        PageTableIndex = 0;

        NormalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_reader.BuilderBookTableModel());
        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();

    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void PrenotaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrenotaButtonActionPerformed

        if (local_reader.Count_PrenotazioniPrestitiByID(local_reader.GetID(), 4) > local_reader.GetMaxPrenotazioni() && local_reader.GetPrestitoSconfinantebyID(local_reader.GetID()))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Limite prenotazioni superato, oppure prestito sconfinante");
            
        } else {

            if (BooksTable.getSelectedRow() == -1) {
                PrenotaButton.setEnabled(false);
                return;
            } else {
            }

            String selected_ISBN = getSelectedISBNFromBooksTable();

            local_reader.InsertPrenotazione(selected_ISBN, local_reader.GetParamUser().GetUserID());
            local_reader.SendCommunicationServer("[READER-" + local_reader.GetID() + "] prenota libro: *" + selected_ISBN);
        }

    }//GEN-LAST:event_PrenotaButtonActionPerformed

    private void DisdiciButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisdiciButtonActionPerformed

        if (BooksTable.getSelectedRow() == -1) {
            PrenotaButton.setEnabled(false);
            return;
        } else {
        }

        String selected_ISBN = getSelectedISBNFromBooksTable();

        local_reader.DeletePrestitoPrenotazioneByISBNByID(Integer.parseInt(selected_ISBN.trim()), Integer.parseInt(local_reader.GetParamUser().GetUserID()), 4);
        local_reader.SendCommunicationServer("[READER-" + local_reader.GetID() + "] disdice prenotazione libro: *" + selected_ISBN);

    }//GEN-LAST:event_DisdiciButtonActionPerformed

    private void prenotazioniButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenotazioniButtonActionPerformed
        
        if (local_reader.Count_PrenotazioniPrestitiByID(local_reader.GetID(), 4) == 0)
        {}
        else
        {
            NormalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_reader.GetPrenotazioniPrestitiByUserID(local_reader.GetID(),3));
            BooksTable.repaint();
        }
    }//GEN-LAST:event_prenotazioniButtonActionPerformed

    private void prestitiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prestitiButtonActionPerformed
        
         if (local_reader.Count_PrenotazioniPrestitiByID(local_reader.GetID(), 4) == 0)
        {}
        else
        {
            NormalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_reader.GetPrenotazioniPrestitiByUserID(local_reader.GetID(),2));
            BooksTable.repaint();
        }
    }//GEN-LAST:event_prestitiButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(appReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(appReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(appReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(appReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new appReader().setVisible(true);
            }
        });
    }
    public static void setUIFont (javax.swing.plaf.FontUIResource f){
        java.util.Enumeration keys = UIManager.getDefaults().keys();
        while (keys.hasMoreElements()) {
            Object key = keys.nextElement();
            Object value = UIManager.get (key);
            if (value instanceof javax.swing.plaf.FontUIResource)
                UIManager.put (key, f);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JOptionPane AskinDeletingOptionPane;
    private javax.swing.JTable BooksTable;
    private javax.swing.JLabel CodiceLabel;
    private javax.swing.JLabel CognomeLabel;
    private javax.swing.JButton DeleteAccButton;
    private javax.swing.JButton DisdiciButton;
    private javax.swing.JLabel DynamicCodice;
    private javax.swing.JLabel DynamicCognome;
    private javax.swing.JLabel DynamicEmail;
    private javax.swing.JLabel DynamicLabelCognome;
    private javax.swing.JLabel DynamicLabelEmail;
    private javax.swing.JLabel DynamicLabelID;
    private javax.swing.JLabel DynamicLabelInquadramento;
    private javax.swing.JLabel DynamicLabelNome;
    private javax.swing.JLabel DynamicLabelNumber;
    private javax.swing.JLabel DynamicNome;
    private javax.swing.JLabel DynamicNumero;
    private javax.swing.JLabel DynamicRuolo;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JButton ModifyButton;
    private javax.swing.JButton ModifyConfirmButton;
    private javax.swing.JDialog ModifyDialog;
    private javax.swing.JTextField ModifyEmailTextField;
    private javax.swing.JButton ModifyExitButton;
    private javax.swing.JTextField ModifyInquadTextField;
    private javax.swing.JPanel ModifyLayer1;
    private javax.swing.JTextField ModifyNumberTextField;
    private javax.swing.JLabel ModifyReporterLabel;
    private javax.swing.JLabel ModifyTitle;
    private javax.swing.JPasswordField NewPasswordTextField;
    private javax.swing.JButton NextPageButton;
    private javax.swing.JLabel NomeLabel;
    private javax.swing.JLabel NumeroLabel;
    private javax.swing.JPasswordField OldPasswordTxtField;
    private javax.swing.JButton PSWConfirmButton;
    private javax.swing.JLabel PageNumLabel;
    private javax.swing.JPanel PasswordModifyContext;
    private javax.swing.JButton PrenotaButton;
    private javax.swing.JButton PreviousButton;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JLabel RuoloLabel;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel TitleUserLabel;
    private javax.swing.JLabel TitoloCambioPsw;
    private javax.swing.JPanel UserContextPanel;
    private javax.swing.JPanel UserEditableInfo;
    private javax.swing.JPanel UserLockedInfo;
    private javax.swing.JPanel appMainPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel newPswLabel;
    private javax.swing.JLabel newvalLabel;
    private javax.swing.JLabel oldPswLabel;
    private javax.swing.JLabel oldvalLabel;
    private javax.swing.JButton prenotazioniButton;
    private javax.swing.JButton prestitiButton;
    private javax.swing.JLabel staticLabelCognome;
    private javax.swing.JLabel staticLabelEmail;
    private javax.swing.JLabel staticLabelID;
    private javax.swing.JLabel staticLabelInquadramento;
    private javax.swing.JLabel staticLabelNome;
    private javax.swing.JLabel staticLabelNumber;
    // End of variables declaration//GEN-END:variables
}
