/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.Librarian;

import javax.swing.border.MatteBorder;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.rmi.RemoteException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Genera l'interfaccia grafica per il LogIn di un utente Librarian
 *
 * @author Lorenzo Gavazzeni
 */
public class appLibrarianLoginForm extends javax.swing.JFrame {

    private static Librarian librarian;
    private boolean isOpen;

    private static final char pswEchoChar = '\u2022';

    /**
     * Creates new form LibrarianForm
     */
    public appLibrarianLoginForm(boolean opened) {

        isOpen = opened;

        try {

            librarian = new Librarian();

        } catch (RemoteException ex) {
            Logger.getLogger(appLibrarianLoginForm.class.getName()).log(Level.SEVERE, null, ex);

        }

        initFont();
        initComponents();
        initLabels();

        if(!isOpen){
            librarian.sendCommunicationServer("[LIB] nuovo client aperto");
            librarian.sendFirstCommunication(librarian.getDefaultType());
        }
        else
        {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ConfirmationCodeDialog = new javax.swing.JDialog();
        ConfirmDiagLayer1 = new javax.swing.JPanel();
        DiscorsiveConfirmLabel = new javax.swing.JLabel();
        ConfirmationCodeField = new javax.swing.JTextField();
        OKConfirmationButton = new javax.swing.JButton();
        ConfirmationDiagErrorLabel = new javax.swing.JLabel();
        ForgotPasswordDialog = new javax.swing.JDialog();
        frgpswLayer1 = new javax.swing.JPanel();
        forgotInserIdLabel = new javax.swing.JLabel();
        forgotpswUserTxtField = new javax.swing.JTextField();
        forgotConfirmButton = new javax.swing.JButton();
        forgotAnnullaButton = new javax.swing.JButton();
        forgotErrorLabel = new javax.swing.JLabel();
        Layer1 = new javax.swing.JPanel();
        LoginLibH1 = new javax.swing.JLabel();
        Layer2 = new javax.swing.JPanel();
        LoginErrorLabel = new javax.swing.JLabel();
        passForgotLabel = new javax.swing.JLabel();
        PasswordTextField = new javax.swing.JPasswordField();
        PasswordLabel = new javax.swing.JLabel();
        UsernameTextField = new javax.swing.JTextField();
        UsernameLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        passForgotLabel1 = new javax.swing.JLabel();
        RegistrationButton = new javax.swing.JButton();
        JoinInButton = new javax.swing.JButton();

        ConfirmationCodeDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ConfirmationCodeDialog.setTitle("Account Activation");
        ConfirmationCodeDialog.setAlwaysOnTop(true);
        ConfirmationCodeDialog.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        ConfirmationCodeDialog.setBounds(new java.awt.Rectangle(0, 0, 400, 250));
        ConfirmationCodeDialog.setFocusable(false);
        ConfirmationCodeDialog.setFont(LibrarianStyle.LABEL_FONT_2);
        ConfirmationCodeDialog.setLocation(this.getLocation());
        ConfirmationCodeDialog.setMinimumSize(new java.awt.Dimension(400, 250));
        ConfirmationCodeDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        ConfirmationCodeDialog.setName("ConfirmationCodeForm"); // NOI18N
        ConfirmationCodeDialog.setResizable(false);
        ConfirmationCodeDialog.setSize(new java.awt.Dimension(400, 250));

        ConfirmDiagLayer1.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        ConfirmDiagLayer1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ConfirmDiagLayer1.setFont(LibrarianStyle.LABEL_FONT_3);
        ConfirmDiagLayer1.setMinimumSize(new java.awt.Dimension(400, 250));
        ConfirmDiagLayer1.setPreferredSize(new java.awt.Dimension(400, 250));

        DiscorsiveConfirmLabel.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        DiscorsiveConfirmLabel.setText("Inserisci il Codice di Attivazione qui:");

        ConfirmationCodeField.setBackground(ConfirmDiagLayer1.getBackground());
        ConfirmationCodeField.setFont(LibrarianStyle.LABEL_FONT_3);
        ConfirmationCodeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ConfirmationCodeField.setText("codice");
        ConfirmationCodeField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        OKConfirmationButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        OKConfirmationButton.setFont(LibrarianStyle.BUTTON_FONT);
        OKConfirmationButton.setText("OK");
        OKConfirmationButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OKConfirmationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OKConfirmationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKConfirmationButtonActionPerformed(evt);
            }
        });

        ConfirmationDiagErrorLabel.setBackground(ConfirmDiagLayer1.getBackground());
        ConfirmationDiagErrorLabel.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        ConfirmationDiagErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ConfirmationDiagErrorLabel.setText("errorlabel");

        javax.swing.GroupLayout ConfirmDiagLayer1Layout = new javax.swing.GroupLayout(ConfirmDiagLayer1);
        ConfirmDiagLayer1.setLayout(ConfirmDiagLayer1Layout);
        ConfirmDiagLayer1Layout.setHorizontalGroup(
            ConfirmDiagLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfirmDiagLayer1Layout.createSequentialGroup()
                .addGroup(ConfirmDiagLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConfirmDiagLayer1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(ConfirmDiagLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DiscorsiveConfirmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConfirmationCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConfirmationDiagErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ConfirmDiagLayer1Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(OKConfirmationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        ConfirmDiagLayer1Layout.setVerticalGroup(
            ConfirmDiagLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfirmDiagLayer1Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(DiscorsiveConfirmLabel)
                .addGap(29, 29, 29)
                .addComponent(ConfirmationCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(OKConfirmationButton)
                .addGap(29, 29, 29)
                .addComponent(ConfirmationDiagErrorLabel)
                .addGap(30, 30, 30))
        );

        ConfirmationCodeDialog.setVisible(false);
        ConfirmationCodeDialog.setLocationRelativeTo(this);

        javax.swing.GroupLayout ConfirmationCodeDialogLayout = new javax.swing.GroupLayout(ConfirmationCodeDialog.getContentPane());
        ConfirmationCodeDialog.getContentPane().setLayout(ConfirmationCodeDialogLayout);
        ConfirmationCodeDialogLayout.setHorizontalGroup(
            ConfirmationCodeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ConfirmDiagLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ConfirmationCodeDialogLayout.setVerticalGroup(
            ConfirmationCodeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ConfirmDiagLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ConfirmDiagLayer1.getAccessibleContext().setAccessibleName("ConfirmDiagLayer1");

        ForgotPasswordDialog.setTitle("appLibrarian - Password Dimenticata");
        ForgotPasswordDialog.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        ForgotPasswordDialog.setMinimumSize(new java.awt.Dimension(365, 240));
        ForgotPasswordDialog.setResizable(false);

        frgpswLayer1.setBackground(ForgotPasswordDialog.getBackground());
        frgpswLayer1.setPreferredSize(new java.awt.Dimension(365, 220));

        forgotInserIdLabel.setBackground(frgpswLayer1.getBackground());
        forgotInserIdLabel.setFont(LibrarianStyle.LABEL_FONT_2);
        forgotInserIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        forgotInserIdLabel.setText("Inserisci il tuo User ID: ");

        forgotpswUserTxtField.setBackground(frgpswLayer1.getBackground());
        forgotpswUserTxtField.setFont(LibrarianStyle.LABEL_FONT_2);
        forgotpswUserTxtField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        forgotpswUserTxtField.setText("username");
        forgotpswUserTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        forgotConfirmButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        forgotConfirmButton.setFont(LibrarianStyle.BUTTON_FONT);
        forgotConfirmButton.setText("Conferma");
        forgotConfirmButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        forgotConfirmButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        forgotConfirmButton.setPreferredSize(new java.awt.Dimension(70, 32));
        forgotConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgotConfirmButtonActionPerformed(evt);
            }
        });

        forgotAnnullaButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        forgotAnnullaButton.setFont(LibrarianStyle.BUTTON_FONT);
        forgotAnnullaButton.setText("Annulla");
        forgotAnnullaButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        forgotAnnullaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        forgotAnnullaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgotAnnullaButtonActionPerformed(evt);
            }
        });

        forgotErrorLabel.setBackground(frgpswLayer1.getBackground());
        forgotErrorLabel.setFont(LibrarianStyle.LABEL_FONT_3);
        forgotErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        forgotErrorLabel.setText("error label");

        javax.swing.GroupLayout frgpswLayer1Layout = new javax.swing.GroupLayout(frgpswLayer1);
        frgpswLayer1.setLayout(frgpswLayer1Layout);
        frgpswLayer1Layout.setHorizontalGroup(
            frgpswLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frgpswLayer1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(forgotAnnullaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(forgotConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
            .addGroup(frgpswLayer1Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(forgotpswUserTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frgpswLayer1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(frgpswLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(forgotInserIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(forgotErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(102, 102, 102))
        );
        frgpswLayer1Layout.setVerticalGroup(
            frgpswLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frgpswLayer1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(forgotInserIdLabel)
                .addGap(18, 18, 18)
                .addComponent(forgotpswUserTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(forgotErrorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frgpswLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forgotAnnullaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forgotConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout ForgotPasswordDialogLayout = new javax.swing.GroupLayout(ForgotPasswordDialog.getContentPane());
        ForgotPasswordDialog.getContentPane().setLayout(ForgotPasswordDialogLayout);
        ForgotPasswordDialogLayout.setHorizontalGroup(
            ForgotPasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frgpswLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ForgotPasswordDialogLayout.setVerticalGroup(
            ForgotPasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frgpswLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
        );

        frgpswLayer1.getAccessibleContext().setAccessibleName("");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("appLibrarian - Login");
        setBackground(java.awt.SystemColor.activeCaption);
        setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(350, 270));
        setName("appLibrarianLoginForm"); // NOI18N
        setPreferredSize(new java.awt.Dimension(660, 435));
        setResizable(false);

        Layer1.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        Layer1.setFont(LibrarianStyle.BIG_TITLE_FONT);
        Layer1.setPreferredSize(new java.awt.Dimension(640, 400));

        LoginLibH1.setFont(Layer1.getFont());
        LoginLibH1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LoginLibH1.setLabelFor(this);
        LoginLibH1.setText("Librarian Login");
        LoginLibH1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        LoginLibH1.setName("LoginLibH1"); // NOI18N

        Layer2.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);
        Layer2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 1, 1, new java.awt.Color(102, 102, 102)));
        Layer2.setFont(LibrarianStyle.LABEL_FONT);
        Layer2.setPreferredSize(new java.awt.Dimension(600, 290));

        LoginErrorLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        LoginErrorLabel.setForeground(LibrarianStyle.EXCEPTION_COLOR);
        LoginErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LoginErrorLabel.setText("GESTIONE ECCEZIONI");
        LoginErrorLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        passForgotLabel.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        passForgotLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passForgotLabel.setText("Password dimenticata ?");
        passForgotLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        passForgotLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        passForgotLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passForgotLabelMouseClicked(evt);
            }
        });

        PasswordTextField.setBackground(Layer2.getBackground());
        PasswordTextField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        PasswordTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PasswordTextField.setToolTipText("password");
        PasswordTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        PasswordTextField.setEchoChar(pswEchoChar);
        PasswordTextField.setName("passwordTextField"); // NOI18N
        PasswordTextField.setSelectionColor(new java.awt.Color(153, 153, 255));

        PasswordLabel.setFont(Layer2.getFont());
        PasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PasswordLabel.setText("Password:");
        PasswordLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        UsernameTextField.setBackground(Layer2.getBackground());
        UsernameTextField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        UsernameTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        UsernameTextField.setToolTipText("username");
        UsernameTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        UsernameTextField.setName("usernameTextField"); // NOI18N
        UsernameTextField.setSelectionColor(new java.awt.Color(153, 153, 255));

        UsernameLabel.setFont(Layer2.getFont());
        UsernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UsernameLabel.setText("Username:");
        UsernameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator1.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        passForgotLabel1.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        passForgotLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passForgotLabel1.setText("Non sei ancora registrato ?");
        passForgotLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        RegistrationButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        RegistrationButton.setFont(LibrarianStyle.BUTTON_FONT);
        RegistrationButton.setForeground(new java.awt.Color(51, 51, 51));
        RegistrationButton.setText("Registrati");
        RegistrationButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        RegistrationButton.setContentAreaFilled(false);
        RegistrationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegistrationButton.setMargin(new java.awt.Insets(2, 7, 2, 7));
        RegistrationButton.setOpaque(true);
        RegistrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrationButtonActionPerformed(evt);
            }
        });

        JoinInButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        JoinInButton.setFont(LibrarianStyle.BUTTON_FONT);
        JoinInButton.setForeground(new java.awt.Color(51, 51, 51));
        JoinInButton.setText("Entra");
        JoinInButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        JoinInButton.setContentAreaFilled(false);
        JoinInButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JoinInButton.setMargin(new java.awt.Insets(2, 7, 2, 7));
        JoinInButton.setOpaque(true);
        JoinInButton.setPreferredSize(new java.awt.Dimension(35, 21));
        JoinInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JoinInButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Layer2Layout = new javax.swing.GroupLayout(Layer2);
        Layer2.setLayout(Layer2Layout);
        Layer2Layout.setHorizontalGroup(
            Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Layer2Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(UsernameLabel)
                        .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PasswordLabel)
                        .addGroup(Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(Layer2Layout.createSequentialGroup()
                                .addComponent(passForgotLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JoinInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(LoginErrorLabel))
                .addGap(43, 43, 43)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passForgotLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegistrationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        Layer2Layout.setVerticalGroup(
            Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Layer2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LoginErrorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Layer2Layout.createSequentialGroup()
                        .addComponent(UsernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(PasswordLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(Layer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JoinInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passForgotLabel)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(Layer2Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(passForgotLabel1)
                .addGap(32, 32, 32)
                .addComponent(RegistrationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PasswordTextField.getAccessibleContext().setAccessibleName("passwordTextField");
        UsernameTextField.getAccessibleContext().setAccessibleName("usernameTextField");

        javax.swing.GroupLayout Layer1Layout = new javax.swing.GroupLayout(Layer1);
        Layer1.setLayout(Layer1Layout);
        Layer1Layout.setHorizontalGroup(
            Layer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Layer1Layout.createSequentialGroup()
                .addGroup(Layer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Layer1Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(LoginLibH1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Layer1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(Layer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        Layer1Layout.setVerticalGroup(
            Layer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Layer1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(LoginLibH1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Layer2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Layer1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Layer1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("appLibrarianLoginForm");
        getAccessibleContext().setAccessibleDescription("");

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                librarian.sendLastCommunication(librarian.getDefaultType());
            }

            @Override
            public void windowClosed(WindowEvent e) {
                librarian.sendLastCommunication(librarian.getDefaultType());
            }
        });

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents



    private static void initFont()
    {

        File f = new File("Font/avnext.ttf");

        if(f.exists() && !f.isDirectory())
        {
            File plainPath = new File("Font/avnext.ttf");
            File boldPath = new File("Font/avnextbld.ttf");
            File italicPath = new File("Font/avnextit.ttf");
            FontConfig FontSettingSetter = new FontConfig(plainPath,boldPath,italicPath);
            FontSettingSetter.setupPlain();
            FontSettingSetter.setupBold();
            FontSettingSetter.setupItalic();

        }
        else{
            LibrarianStyle.FONT_NAME_BOLD = "Verdana";
            LibrarianStyle.FONT_NAME_ITALIC = "Verdana";
            LibrarianStyle.FONT_NAME_PLAIN = "Verdana";
        }

    }

    private void initLabels() {

        LoginErrorLabel.setVisible(false);
        ConfirmationDiagErrorLabel.setVisible(false);
        forgotErrorLabel.setVisible(false);

        setConfirmDialogCloseSafe();
        setForgotPsWDialogCloseSafe();
    }

    private void setConfirmDialogCloseSafe() {
        ConfirmationCodeDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ConfirmationCodeDialog.getParent().setEnabled(true);
                
            }
        });
    }

    private void setForgotPsWDialogCloseSafe() {
        ForgotPasswordDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ForgotPasswordDialog.getParent().setEnabled(true);

            }
        });
    }

    private void updateLabel(javax.swing.JLabel label_to_update, java.awt.Color foreground_color, String message) {
        label_to_update.setForeground(foreground_color);
        label_to_update.setText(message);
        label_to_update.setVisible(true);

    }

    private boolean checkField() throws RemoteException {

        MatteBorder exceptionborder = new MatteBorder(0, 0, 1, 0, LibrarianStyle.EXCEPTION_COLOR);

        int controller = librarian.loginConfirmation(UsernameTextField.getText(), PasswordTextField.getPassword(), librarian.getDefaultType());
        
        
        if (controller != 0) {
            if (controller == -1) {
                updateLabel(LoginErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Errore Sconosciuto");
            }
            if (controller == 1) {
                UsernameTextField.setBorder(exceptionborder);

                updateLabel(LoginErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Errore: Username Errato");
            }
            if (controller == 2) {
                PasswordTextField.setBorder(exceptionborder);

                updateLabel(LoginErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Errore: Password Errata");
            }

            
        } else {
            return true;
        }

        return false;
    }

    private void RegistrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrationButtonActionPerformed

        appLibrarianRegistrationForm registrationForm = new appLibrarianRegistrationForm(librarian);
        this.setVisible(false);
        registrationForm.setVisible(true);

    }//GEN-LAST:event_RegistrationButtonActionPerformed

    private void JoinInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JoinInButtonActionPerformed

        try {

            if (checkField()) {
                String tmp_id = UsernameTextField.getText();

                librarian.setTmpID(tmp_id);
                librarian.setLibrarianType();

                int confirmed_tmp_acc = Integer.parseInt(librarian.getParametricInformation("CONFIRMED", librarian.getDefaultType(), librarian.getID()));

                if (confirmed_tmp_acc == 0) {
                    updateLabel(LoginErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Account non ancora attivato");

                    this.setEnabled(false);
                    ConfirmationCodeDialog.setVisible(true);

                } else { 

                    librarian.setUtente(librarian.getUtentebyID(librarian.getID(), librarian.getDefaultType()));

                    if(librarian.verifySessionUser(librarian.getID())) {

                        updateLabel(LoginErrorLabel, LibrarianStyle.SUCCESS_COLOR, "LOG IN EFFETTUATO");
                        librarian.sendCommunicationServer("[LIB-" + librarian.getID() + "] LOG IN effettuato con successo");

                        appLibrarian application = new appLibrarian(librarian);

                        this.setVisible(false);

                        application.setVisible(true);
                    }
                    else {
                        updateLabel(LoginErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente già collegato");
                    }
                }

            } else {
                
            }

        } catch (RemoteException ex) {
            Logger.getLogger(appLibrarianLoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_JoinInButtonActionPerformed

    private void OKConfirmationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKConfirmationButtonActionPerformed

        if (librarian.checker.userChecker.checkCodice(ConfirmationCodeField.getText()) != 0) {
            updateLabel(ConfirmationDiagErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Codice Inserito non rispetta i requisiti");
        } else {

            String tmp_account_code = librarian.getParametricInformation("CODICE", librarian.getDefaultType(), librarian.getID());
            String real_account_code = "";

            for (int i = 0; i < tmp_account_code.length(); i++) {
                if (Character.isDigit(tmp_account_code.charAt(i))) {
                    real_account_code += tmp_account_code.charAt(i);
                } else {
                }
            }

            if (real_account_code.equals(ConfirmationCodeField.getText())) {

                updateLabel(ConfirmationDiagErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Codice Confermato");
                updateLabel(LoginErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Codice Confermato, effettuare log in");

                librarian.updateUserInfo(librarian.getID(), "CONFIRMED", "1", librarian.getDefaultType());

                try {

                    Thread.sleep(1300);

                } catch (InterruptedException ex) {
                    Logger.getLogger(appLibrarianLoginForm.class.getName()).log(Level.SEVERE, null, ex);
                }

                ConfirmationCodeDialog.dispose();
                this.setEnabled(true);
                
                librarian.sendCommunicationServer("[LIB-" + librarian.getID() + "] codice di registrazione: confermato");

            } else {
                librarian.updateDecrementAttempsLogIn(librarian.getID(), librarian.getDefaultType());

                int attempts = Integer.parseInt(librarian.getParametricInformation("TENTATIVI", librarian.getDefaultType(), librarian.getID()));

                if (attempts == 0) {
                    librarian.sendCommunicationServer("[LIB-" + librarian.getID() + "] errore, account cancellato");
                    librarian.deleteUserAccount(librarian.getID(), librarian.getDefaultType());

                    ConfirmationCodeDialog.dispose();
                    this.setEnabled(true);

                    updateLabel(LoginErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "ERRORE FATALE: account cancellato");
                }

                updateLabel(ConfirmationDiagErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Codice non Corrisponde ! tentativi : " + attempts);
                librarian.sendCommunicationServer("[LIB-" + librarian.getID() + "] codice di registrazione: errato");
            }

        }

    }//GEN-LAST:event_OKConfirmationButtonActionPerformed

    private void passForgotLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passForgotLabelMouseClicked

        ForgotPasswordDialog.setLocationRelativeTo(this);
        ForgotPasswordDialog.setVisible(true);
        ForgotPasswordDialog.setAlwaysOnTop(true);
    }//GEN-LAST:event_passForgotLabelMouseClicked

    private void forgotConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgotConfirmButtonActionPerformed

        String context_user_id;

        if (librarian.checker.userChecker.checkCodiceFiscale(forgotpswUserTxtField.getText()) != 0) {
            updateLabel(forgotErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "UserID non rispetta i requisiti");
        } else {

            context_user_id = forgotpswUserTxtField.getText();

            if (librarian.checkParametricExisting("USERID", context_user_id, librarian.getDefaultType())) {
                int confirmed_acc = Integer.parseInt(librarian.getParametricInformation("CONFIRMED", librarian.getDefaultType(), context_user_id));

                if (confirmed_acc == 1) {
                    char[] generated_new_psw = librarian.generatePassword();
                    char[] generated_new_user_code = librarian.generateUserCode(context_user_id);

                    librarian.sendCommunicationServer("[LIB-" + context_user_id + "] reset della password completato");
                    
                    librarian.updateUserPassword(context_user_id, generated_new_psw, librarian.getDefaultType());
                    librarian.updateUserInfo(context_user_id, "CONFIRMED", "0", librarian.getDefaultType());
                    librarian.updateUserInfo(context_user_id, "TENTATIVI", "5", librarian.getDefaultType());
                    librarian.updateUserInfo(context_user_id, "CODICE", Arrays.toString(generated_new_user_code), librarian.getDefaultType());


                    librarian.sendNewPassword(context_user_id, librarian.getDefaultType());

                    ForgotPasswordDialog.dispose();
                    
                } else {
                    updateLabel(forgotErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "UserID non ancora attivato");
                }
            } else {
                updateLabel(forgotErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "UserID non presente nel DB");
            }

        }

    }//GEN-LAST:event_forgotConfirmButtonActionPerformed

    private void forgotAnnullaButtonActionPerformed(ActionEvent evt) {

        ForgotPasswordDialog.dispose();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(appLibrarianLoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(appLibrarianLoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(appLibrarianLoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(appLibrarianLoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new appLibrarianLoginForm(false).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ConfirmDiagLayer1;
    private javax.swing.JDialog ConfirmationCodeDialog;
    private javax.swing.JTextField ConfirmationCodeField;
    private javax.swing.JLabel ConfirmationDiagErrorLabel;
    private javax.swing.JLabel DiscorsiveConfirmLabel;
    private javax.swing.JDialog ForgotPasswordDialog;
    private javax.swing.JButton JoinInButton;
    private javax.swing.JPanel Layer1;
    private javax.swing.JPanel Layer2;
    private javax.swing.JLabel LoginErrorLabel;
    private javax.swing.JLabel LoginLibH1;
    private javax.swing.JButton OKConfirmationButton;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPasswordField PasswordTextField;
    private javax.swing.JButton RegistrationButton;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JButton forgotAnnullaButton;
    private javax.swing.JButton forgotConfirmButton;
    private javax.swing.JLabel forgotErrorLabel;
    private javax.swing.JLabel forgotInserIdLabel;
    private javax.swing.JTextField forgotpswUserTxtField;
    private javax.swing.JPanel frgpswLayer1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel passForgotLabel;
    private javax.swing.JLabel passForgotLabel1;
    // End of variables declaration//GEN-END:variables
}
