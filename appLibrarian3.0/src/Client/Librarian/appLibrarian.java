/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.Librarian;

import Checker.Checker;
import Common.Libro;
import Common.Utente;
import Common.UtenteLibrarian;
import Common.UtenteReader;

import javax.swing.*;
import javax.swing.border.MatteBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.RemoteException;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import static javax.swing.JOptionPane.YES_NO_OPTION;

/**
 *
 * @author Lorenzo Gavazzeni
 */
public class appLibrarian extends javax.swing.JFrame {

    private static final int MAX_ROW_PER_PAGE = 10;
    private static final int TOTAL_BOOK_FIELD = 8;

    private Vector<Vector<Vector<Object>>> page_vector;
    private Vector<String> Columns;
    private int PageTableIndex = 0;
    private int StatsPageIndex = 0;
    private boolean book_creation_success = false;

    private static Librarian local_librarian;

    public appLibrarian(Librarian librarian_user_loggedin) {

        local_librarian = librarian_user_loggedin;

        initComponents();

        try {
            initBackEnd();
        } catch (RemoteException ex) {
            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private appLibrarian() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ModifyDialog = new javax.swing.JDialog(this);
        ModifyLayer1 = new javax.swing.JPanel();
        ModifyTitle = new javax.swing.JLabel();
        UserLockedInfo = new javax.swing.JPanel();
        staticLabelID = new javax.swing.JLabel();
        DynamicLabelID = new javax.swing.JLabel();
        staticLabelNome = new javax.swing.JLabel();
        DynamicLabelNome = new javax.swing.JLabel();
        staticLabelCognome = new javax.swing.JLabel();
        DynamicLabelCognome = new javax.swing.JLabel();
        UserEditableInfo = new javax.swing.JPanel();
        staticLabelNumber = new javax.swing.JLabel();
        DynamicLabelNumber = new javax.swing.JLabel();
        staticLabelInquadramento = new javax.swing.JLabel();
        DynamicLabelInquadramento = new javax.swing.JLabel();
        staticLabelEmail = new javax.swing.JLabel();
        DynamicLabelEmail = new javax.swing.JLabel();
        ModifyEmailTextField = new javax.swing.JTextField();
        ModifyNumberTextField = new javax.swing.JTextField();
        ModifyInquadTextField = new javax.swing.JTextField();
        oldvalLabel = new javax.swing.JLabel();
        newvalLabel = new javax.swing.JLabel();
        PasswordModifyContext = new javax.swing.JPanel();
        TitoloCambioPsw = new javax.swing.JLabel();
        oldPswLabel = new javax.swing.JLabel();
        OldPasswordTxtField = new javax.swing.JPasswordField();
        newPswLabel = new javax.swing.JLabel();
        NewPasswordTextField = new javax.swing.JPasswordField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        PSWConfirmButton = new javax.swing.JButton();
        ModifyConfirmButton = new javax.swing.JButton();
        ModifyExitButton = new javax.swing.JButton();
        ModifyReporterLabel = new javax.swing.JLabel();
        DeleteAccButton = new javax.swing.JButton();
        AskinDeletingOptionPane = new javax.swing.JOptionPane();
        addNewBookDialog = new javax.swing.JDialog(this);
        newBookLayer1 = new javax.swing.JPanel();
        ModifyTitle1 = new javax.swing.JLabel();
        newBookLayer2 = new javax.swing.JPanel();
        staticLabelCode = new javax.swing.JLabel();
        CodeTextField = new javax.swing.JTextField();
        staticLabelAutore = new javax.swing.JLabel();
        AutoreTextField = new javax.swing.JTextField();
        staticLabeTitle = new javax.swing.JLabel();
        TitoloTextField = new javax.swing.JTextField();
        staticLabelEditrice = new javax.swing.JLabel();
        EditriceTextField = new javax.swing.JTextField();
        staticLabelPubblicaz = new javax.swing.JLabel();
        PubblicazTextField = new javax.swing.JTextField();
        staticLabelRistampa = new javax.swing.JLabel();
        RistampaTextField = new javax.swing.JTextField();
        staticLabelCategoria = new javax.swing.JLabel();
        staticLabelLingua = new javax.swing.JLabel();
        LinguaTextField = new javax.swing.JTextField();
        staticLabelScaffale = new javax.swing.JLabel();
        ScaffaleTextField = new javax.swing.JTextField();
        optionalFieldsLabel = new javax.swing.JLabel();
        TitleError = new javax.swing.JLabel();
        CodeError = new javax.swing.JLabel();
        AutorError = new javax.swing.JLabel();
        EditriceError = new javax.swing.JLabel();
        AnnoError = new javax.swing.JLabel();
        RistampaError = new javax.swing.JLabel();
        CategoriaError = new javax.swing.JLabel();
        LinguaError = new javax.swing.JLabel();
        ScaffaleError = new javax.swing.JLabel();
        CategorieComboBox = new javax.swing.JComboBox<>();
        newBookLayer3 = new javax.swing.JPanel();
        AnnullaNewBookButton = new javax.swing.JButton();
        ReporterNewBookLabel = new javax.swing.JLabel();
        AddBookButton = new javax.swing.JButton();
        newUserDialog = new javax.swing.JDialog(this);
        newUserPanel1 = new javax.swing.JPanel();
        newUserPanel2 = new javax.swing.JPanel();
        nomeLabel2 = new javax.swing.JLabel();
        newUserNomeTxtField = new javax.swing.JTextField();
        cognomeLabel2 = new javax.swing.JLabel();
        newUserCognomeTxtField = new javax.swing.JTextField();
        emailLabel2 = new javax.swing.JLabel();
        newUserEmailTxtField = new javax.swing.JTextField();
        codicefiscaleLabel2 = new javax.swing.JLabel();
        newUserCodiceTxtField = new javax.swing.JTextField();
        telephoneLabel2 = new javax.swing.JLabel();
        newUserTelefonoTxtField = new javax.swing.JTextField();
        newuserErrorNomeLabel = new javax.swing.JLabel();
        newuserErrorCognomeLabel = new javax.swing.JLabel();
        newuserErrorCodiceLabel = new javax.swing.JLabel();
        newuserErrorEmailLabel = new javax.swing.JLabel();
        newuserErrorNumTelLabel = new javax.swing.JLabel();
        newuserSuccessLabel = new javax.swing.JLabel();
        newuserInquadramentoLabel = new javax.swing.JLabel();
        newUserInquadField = new javax.swing.JTextField();
        newuserErrorInquadLabel = new javax.swing.JLabel();
        IndietroButton = new javax.swing.JButton();
        RegistrationButton = new javax.swing.JButton();
        RegistrationH1 = new javax.swing.JLabel();
        StatisticheDialog = new javax.swing.JDialog();
        StatisticheLayer1 = new javax.swing.JPanel();
        TitleLabel1 = new javax.swing.JLabel();
        InputPanel = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        statiticheGeneraliStoricoButton = new javax.swing.JButton();
        mostraWithSortingButton = new javax.swing.JButton();
        perinquadramentoRadioButton = new javax.swing.JRadioButton();
        mostraErrorLabel = new javax.swing.JLabel();
        statiticheGeneraliPrestitiButton = new javax.swing.JButton();
        percategoriaRadioButton = new javax.swing.JRadioButton();
        assolutaRadioButton = new javax.swing.JRadioButton();
        statiticheGeneraliPrenotazioni = new javax.swing.JButton();
        prestitoDiscorsiveLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        StatisticheUserIDTextField = new javax.swing.JTextField();
        statiticheUserPrestitiButton = new javax.swing.JButton();
        statisticheUserError = new javax.swing.JLabel();
        statisticheUserStoricoButton = new javax.swing.JButton();
        IndietroStatisticheButton = new javax.swing.JButton();
        TablePanel = new javax.swing.JPanel();
        statsPageNumTableLabel = new javax.swing.JLabel();
        statsPreviousPageTableButton = new javax.swing.JButton();
        statsNextPageTableButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        statsTable = new javax.swing.JTable();
        appMainPanel = new javax.swing.JPanel();
        UserContextPanel = new javax.swing.JPanel();
        RuoloLabel = new javax.swing.JLabel();
        DynamicRuolo = new javax.swing.JLabel();
        CodiceLabel = new javax.swing.JLabel();
        DynamicCodice = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        NomeLabel = new javax.swing.JLabel();
        DynamicNome = new javax.swing.JLabel();
        CognomeLabel = new javax.swing.JLabel();
        DynamicCognome = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        DynamicEmail = new javax.swing.JLabel();
        NumeroLabel = new javax.swing.JLabel();
        DynamicNumero = new javax.swing.JLabel();
        TitleUserLabel = new javax.swing.JLabel();
        ModifyButton = new javax.swing.JButton();
        OptionsPanel = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        UserDeletePanel = new javax.swing.JPanel();
        deleteUserIDErrorLabel = new javax.swing.JLabel();
        discorsiveDeleteuserLabel = new javax.swing.JLabel();
        deleteUserTextField = new javax.swing.JTextField();
        deleteUserButton = new javax.swing.JButton();
        creaReaderButton = new javax.swing.JButton();
        PrenotazioneCreationPanel = new javax.swing.JPanel();
        creanuovaPrenotazioneErrorLabel = new javax.swing.JLabel();
        creanuovaPrenotazionerButton = new javax.swing.JButton();
        visualizzaPrenotazioneButton = new javax.swing.JButton();
        discorsivecreanuovaPrenotazioneLabel1 = new javax.swing.JLabel();
        creanuovaPrenotazioneTextField = new javax.swing.JTextField();
        disdiciPrenotazionerButton = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        PrenotazionePanel = new javax.swing.JPanel();
        prestitoTextField = new javax.swing.JTextField();
        prestitoErrorLabel = new javax.swing.JLabel();
        prestitoButton = new javax.swing.JButton();
        prestitoDiscorsiveLabel = new javax.swing.JLabel();
        riconsegnaButton = new javax.swing.JButton();
        disattivaPrestitoButton = new javax.swing.JButton();
        TitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BooksTable = new javax.swing.JTable();
        NextPageButton = new javax.swing.JButton();
        PreviousButton = new javax.swing.JButton();
        EliminaButton = new javax.swing.JButton();
        PageNumLabel = new javax.swing.JLabel();
        addNewBookButton = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        SearchButton = new javax.swing.JButton();
        SearchTextField = new javax.swing.JTextField();
        statisticheButton = new javax.swing.JButton();
        EliminaOption = new javax.swing.JOptionPane(YES_NO_OPTION);

        ModifyDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ModifyDialog.setTitle("Modifica Informazioni");
        ModifyDialog.setAlwaysOnTop(true);
        ModifyDialog.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        ModifyDialog.setBounds(new java.awt.Rectangle(0, 0, 500, 350));
        ModifyDialog.setFocusable(false);
        ModifyDialog.setFont(LibrarianStyle.LABEL_FONT_3);
        ModifyDialog.setLocation(getLocation());
        ModifyDialog.setMinimumSize(new java.awt.Dimension(428, 600));
        ModifyDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        ModifyDialog.setName("LibrarianModifyForm"); // NOI18N
        ModifyDialog.setResizable(false);
        ModifyDialog.setSize(new java.awt.Dimension(930, 530));

        ModifyLayer1.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);
        ModifyLayer1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ModifyLayer1.setFont(LibrarianStyle.LABEL_FONT_3);
        ModifyLayer1.setPreferredSize(new java.awt.Dimension(930, 530));

        ModifyTitle.setFont(LibrarianStyle.MEDIUM_TITLE_FONT);
        ModifyTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ModifyTitle.setLabelFor(ModifyDialog);
        ModifyTitle.setText("AppLibrarian - Modifica");

        UserLockedInfo.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        UserLockedInfo.setFont(LibrarianStyle.LABEL_FONT_2);

        staticLabelID.setBackground(ModifyLayer1.getBackground());
        staticLabelID.setFont(UserLockedInfo.getFont());
        staticLabelID.setText("UserID:");

        DynamicLabelID.setBackground(ModifyLayer1.getBackground());
        DynamicLabelID.setFont(UserLockedInfo.getFont());
        DynamicLabelID.setText(local_librarian.getUser().getUserID());

        staticLabelNome.setBackground(ModifyLayer1.getBackground());
        staticLabelNome.setFont(UserLockedInfo.getFont());
        staticLabelNome.setText("Nome: ");

        DynamicLabelNome.setBackground(ModifyLayer1.getBackground());
        DynamicLabelNome.setFont(UserLockedInfo.getFont());
        DynamicLabelNome.setText(local_librarian.getUser().getNome());

        staticLabelCognome.setBackground(ModifyLayer1.getBackground());
        staticLabelCognome.setFont(UserLockedInfo.getFont());
        staticLabelCognome.setText("Cognome: ");

        DynamicLabelCognome.setBackground(ModifyLayer1.getBackground());
        DynamicLabelCognome.setFont(UserLockedInfo.getFont());
        DynamicLabelCognome.setText(local_librarian.getUser().getCognome());

        javax.swing.GroupLayout UserLockedInfoLayout = new javax.swing.GroupLayout(UserLockedInfo);
        UserLockedInfo.setLayout(UserLockedInfoLayout);
        UserLockedInfoLayout.setHorizontalGroup(
            UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLockedInfoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staticLabelCognome, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DynamicLabelID)
                    .addComponent(DynamicLabelCognome)
                    .addComponent(DynamicLabelNome))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        UserLockedInfoLayout.setVerticalGroup(
            UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLockedInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelID)
                    .addComponent(DynamicLabelID))
                .addGap(18, 18, 18)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelNome)
                    .addComponent(DynamicLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UserLockedInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelCognome)
                    .addComponent(DynamicLabelCognome, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        UserEditableInfo.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        UserEditableInfo.setFont(LibrarianStyle.LABEL_FONT_2);

        staticLabelNumber.setBackground(ModifyLayer1.getBackground());
        staticLabelNumber.setFont(UserLockedInfo.getFont());
        staticLabelNumber.setText("Numero:");

        DynamicLabelNumber.setBackground(ModifyLayer1.getBackground());
        DynamicLabelNumber.setFont(UserLockedInfo.getFont());
        DynamicLabelNumber.setText(local_librarian.getUser().getNumeroTelefono());

        staticLabelInquadramento.setBackground(ModifyLayer1.getBackground());
        staticLabelInquadramento.setFont(UserLockedInfo.getFont());
        staticLabelInquadramento.setText("Inquadramento: ");

        DynamicLabelInquadramento.setBackground(ModifyLayer1.getBackground());
        DynamicLabelInquadramento.setFont(UserLockedInfo.getFont());
        DynamicLabelInquadramento.setText(local_librarian.getUser().getInquadramento());

        staticLabelEmail.setBackground(ModifyLayer1.getBackground());
        staticLabelEmail.setFont(UserLockedInfo.getFont());
        staticLabelEmail.setText("Email:");

        DynamicLabelEmail.setBackground(ModifyLayer1.getBackground());
        DynamicLabelEmail.setFont(UserLockedInfo.getFont());
        DynamicLabelEmail.setText(local_librarian.getUser().getEmail());

        ModifyEmailTextField.setBackground(UserEditableInfo.getBackground());
        ModifyEmailTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        ModifyEmailTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        ModifyNumberTextField.setBackground(UserEditableInfo.getBackground());
        ModifyNumberTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        ModifyNumberTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        ModifyInquadTextField.setBackground(UserEditableInfo.getBackground());
        ModifyInquadTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        ModifyInquadTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout UserEditableInfoLayout = new javax.swing.GroupLayout(UserEditableInfo);
        UserEditableInfo.setLayout(UserEditableInfoLayout);
        UserEditableInfoLayout.setHorizontalGroup(
            UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserEditableInfoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staticLabelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelInquadramento, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staticLabelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DynamicLabelEmail)
                    .addComponent(DynamicLabelInquadramento)
                    .addComponent(DynamicLabelNumber))
                .addGap(78, 78, 78)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ModifyNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(ModifyEmailTextField)
                    .addComponent(ModifyInquadTextField))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        UserEditableInfoLayout.setVerticalGroup(
            UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserEditableInfoLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelEmail)
                    .addComponent(DynamicLabelEmail)
                    .addComponent(ModifyEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelNumber)
                    .addComponent(DynamicLabelNumber)
                    .addComponent(ModifyNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UserEditableInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelInquadramento)
                    .addComponent(DynamicLabelInquadramento, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ModifyInquadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        oldvalLabel.setFont(UserEditableInfo.getFont());
        oldvalLabel.setText("valore attuale");

        newvalLabel.setFont(UserEditableInfo.getFont());
        newvalLabel.setText("nuovo valore");

        PasswordModifyContext.setBackground(UserEditableInfo.getBackground());
        PasswordModifyContext.setFont(UserEditableInfo.getFont());

        TitoloCambioPsw.setFont(LibrarianStyle.LABEL_FONT);
        TitoloCambioPsw.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitoloCambioPsw.setLabelFor(PasswordModifyContext);
        TitoloCambioPsw.setText("Cambio Password");

        oldPswLabel.setFont(LibrarianStyle.LABEL_FONT_2);
        oldPswLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        oldPswLabel.setText("Vecchia Password: ");

        OldPasswordTxtField.setBackground(PasswordModifyContext.getBackground());
        OldPasswordTxtField.setFont(LibrarianStyle.LABEL_FONT_3);
        OldPasswordTxtField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        OldPasswordTxtField.setToolTipText("password");
        OldPasswordTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        OldPasswordTxtField.setEchoChar('•');
        OldPasswordTxtField.setName("passwordTextField"); // NOI18N
        OldPasswordTxtField.setSelectionColor(new java.awt.Color(153, 153, 255));

        newPswLabel.setFont(LibrarianStyle.LABEL_FONT_2);
        newPswLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newPswLabel.setText("Nuova Password:");

        NewPasswordTextField.setBackground(PasswordModifyContext.getBackground());
        NewPasswordTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        NewPasswordTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NewPasswordTextField.setToolTipText("password");
        NewPasswordTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        NewPasswordTextField.setEchoChar('•');
        NewPasswordTextField.setName("passwordTextField"); // NOI18N
        NewPasswordTextField.setSelectionColor(new java.awt.Color(153, 153, 255));

        PSWConfirmButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        PSWConfirmButton.setFont(LibrarianStyle.BUTTON_FONT);
        PSWConfirmButton.setText("Conferma");
        PSWConfirmButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PSWConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PSWConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSWConfirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PasswordModifyContextLayout = new javax.swing.GroupLayout(PasswordModifyContext);
        PasswordModifyContext.setLayout(PasswordModifyContextLayout);
        PasswordModifyContextLayout.setHorizontalGroup(
            PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(TitoloCambioPsw, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                        .addComponent(NewPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                        .addComponent(PSWConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PasswordModifyContextLayout.createSequentialGroup()
                        .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OldPasswordTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(newPswLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(oldPswLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37))))
        );
        PasswordModifyContextLayout.setVerticalGroup(
            PasswordModifyContextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PasswordModifyContextLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitoloCambioPsw, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(oldPswLabel)
                .addGap(18, 18, 18)
                .addComponent(OldPasswordTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(newPswLabel)
                .addGap(18, 18, 18)
                .addComponent(NewPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PSWConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PSWConfirmButton.getAccessibleContext().setAccessibleName("ConfermationPswButton");

        ModifyConfirmButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        ModifyConfirmButton.setFont(LibrarianStyle.BUTTON_FONT);
        ModifyConfirmButton.setText("Conferma");
        ModifyConfirmButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ModifyConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ModifyConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyConfirmButtonActionPerformed(evt);
            }
        });

        ModifyExitButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        ModifyExitButton.setFont(LibrarianStyle.BUTTON_FONT);
        ModifyExitButton.setText("Esci");
        ModifyExitButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ModifyExitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ModifyExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyExitButtonActionPerformed(evt);
            }
        });

        ModifyReporterLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        ModifyReporterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ModifyReporterLabel.setText("REPORTERRRRRRRRRRRRRRRRRRRRRRRRR");

        DeleteAccButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        DeleteAccButton.setFont(LibrarianStyle.BUTTON_FONT);
        DeleteAccButton.setText("Elimina");
        DeleteAccButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DeleteAccButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteAccButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAccButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ModifyLayer1Layout = new javax.swing.GroupLayout(ModifyLayer1);
        ModifyLayer1.setLayout(ModifyLayer1Layout);
        ModifyLayer1Layout.setHorizontalGroup(
            ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ModifyLayer1Layout.createSequentialGroup()
                        .addComponent(ModifyTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ModifyLayer1Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(ModifyExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ModifyConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ModifyLayer1Layout.createSequentialGroup()
                        .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                                .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ModifyLayer1Layout.createSequentialGroup()
                                        .addComponent(UserLockedInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(DeleteAccButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(UserEditableInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(oldvalLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(newvalLabel)
                                .addGap(92, 92, 92)))
                        .addComponent(PasswordModifyContext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(ModifyReporterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ModifyLayer1Layout.setVerticalGroup(
            ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyLayer1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(ModifyTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ModifyLayer1Layout.createSequentialGroup()
                        .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UserLockedInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteAccButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(oldvalLabel)
                            .addComponent(newvalLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UserEditableInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PasswordModifyContext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addComponent(ModifyReporterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ModifyLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ModifyConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(ModifyExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        AskinDeletingOptionPane.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        AskinDeletingOptionPane.setMessage("Sei sicuro di eliminare questo account ?");
        AskinDeletingOptionPane.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);

        javax.swing.GroupLayout ModifyDialogLayout = new javax.swing.GroupLayout(ModifyDialog.getContentPane());
        ModifyDialog.getContentPane().setLayout(ModifyDialogLayout);
        ModifyDialogLayout.setHorizontalGroup(
            ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModifyDialogLayout.createSequentialGroup()
                .addComponent(ModifyLayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 918, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ModifyDialogLayout.createSequentialGroup()
                    .addGap(0, 328, Short.MAX_VALUE)
                    .addComponent(AskinDeletingOptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 328, Short.MAX_VALUE)))
        );
        ModifyDialogLayout.setVerticalGroup(
            ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ModifyLayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(ModifyDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ModifyDialogLayout.createSequentialGroup()
                    .addGap(0, 230, Short.MAX_VALUE)
                    .addComponent(AskinDeletingOptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 230, Short.MAX_VALUE)))
        );

        addNewBookDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addNewBookDialog.setTitle("Creazione Libro");
        addNewBookDialog.setAlwaysOnTop(true);
        addNewBookDialog.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        addNewBookDialog.setFocusable(false);
        addNewBookDialog.setMinimumSize(new java.awt.Dimension(428, 670));
        addNewBookDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        addNewBookDialog.setPreferredSize(new java.awt.Dimension(428, 670));
        addNewBookDialog.setResizable(false);
        addNewBookDialog.setSize(new java.awt.Dimension(428, 670));

        newBookLayer1.setBackground(addNewBookDialog.getBackground());
        newBookLayer1.setFont(LibrarianStyle.LABEL_FONT_2);

        ModifyTitle1.setFont(LibrarianStyle.MEDIUM_TITLE_FONT);
        ModifyTitle1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ModifyTitle1.setLabelFor(ModifyDialog);
        ModifyTitle1.setText("AppLibrarian - Aggiunta Libro");

        newBookLayer2.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);

        staticLabelCode.setBackground(ModifyLayer1.getBackground());
        staticLabelCode.setFont(UserLockedInfo.getFont());
        staticLabelCode.setText("Codice ");

        CodeTextField.setBackground(newBookLayer2.getBackground());
        CodeTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        CodeTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        CodeTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        staticLabelAutore.setBackground(ModifyLayer1.getBackground());
        staticLabelAutore.setFont(UserLockedInfo.getFont());
        staticLabelAutore.setText("Autore ");

        AutoreTextField.setBackground(newBookLayer2.getBackground());
        AutoreTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        AutoreTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        AutoreTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        staticLabeTitle.setBackground(ModifyLayer1.getBackground());
        staticLabeTitle.setFont(UserLockedInfo.getFont());
        staticLabeTitle.setText("Titolo ");

        TitoloTextField.setBackground(newBookLayer2.getBackground());
        TitoloTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        TitoloTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        TitoloTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        staticLabelEditrice.setBackground(ModifyLayer1.getBackground());
        staticLabelEditrice.setFont(UserLockedInfo.getFont());
        staticLabelEditrice.setText("Casa Editrice");

        EditriceTextField.setBackground(newBookLayer2.getBackground());
        EditriceTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        EditriceTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        EditriceTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        staticLabelPubblicaz.setBackground(ModifyLayer1.getBackground());
        staticLabelPubblicaz.setFont(UserLockedInfo.getFont());
        staticLabelPubblicaz.setText("Anno Pubblicazione ");

        PubblicazTextField.setBackground(newBookLayer2.getBackground());
        PubblicazTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        PubblicazTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        PubblicazTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        staticLabelRistampa.setBackground(ModifyLayer1.getBackground());
        staticLabelRistampa.setFont(UserLockedInfo.getFont());
        staticLabelRistampa.setText("Anno Ristampa* ");

        RistampaTextField.setBackground(newBookLayer2.getBackground());
        RistampaTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        RistampaTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        RistampaTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        staticLabelCategoria.setBackground(ModifyLayer1.getBackground());
        staticLabelCategoria.setFont(UserLockedInfo.getFont());
        staticLabelCategoria.setText("Categoria: ");

        staticLabelLingua.setBackground(ModifyLayer1.getBackground());
        staticLabelLingua.setFont(UserLockedInfo.getFont());
        staticLabelLingua.setText("Lingua:");

        LinguaTextField.setBackground(newBookLayer2.getBackground());
        LinguaTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        LinguaTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        LinguaTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        staticLabelScaffale.setBackground(ModifyLayer1.getBackground());
        staticLabelScaffale.setFont(UserLockedInfo.getFont());
        staticLabelScaffale.setText("Scaffale* ");

        ScaffaleTextField.setBackground(newBookLayer2.getBackground());
        ScaffaleTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        ScaffaleTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        ScaffaleTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        optionalFieldsLabel.setBackground(newBookLayer2.getBackground());
        optionalFieldsLabel.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        optionalFieldsLabel.setText("* campi facoltativi");

        TitleError.setBackground(newBookLayer2.getBackground());
        TitleError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        TitleError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleError.setText("•");

        CodeError.setBackground(newBookLayer2.getBackground());
        CodeError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        CodeError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CodeError.setText("•");

        AutorError.setBackground(newBookLayer2.getBackground());
        AutorError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        AutorError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AutorError.setText("•");

        EditriceError.setBackground(newBookLayer2.getBackground());
        EditriceError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        EditriceError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EditriceError.setText("•");

        AnnoError.setBackground(newBookLayer2.getBackground());
        AnnoError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        AnnoError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AnnoError.setText("•");

        RistampaError.setBackground(newBookLayer2.getBackground());
        RistampaError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        RistampaError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RistampaError.setText("•");

        CategoriaError.setBackground(newBookLayer2.getBackground());
        CategoriaError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        CategoriaError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CategoriaError.setText("•");

        LinguaError.setBackground(newBookLayer2.getBackground());
        LinguaError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        LinguaError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LinguaError.setText("•");

        ScaffaleError.setBackground(newBookLayer2.getBackground());
        ScaffaleError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        ScaffaleError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ScaffaleError.setText("•");

        CategorieComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(Libro.Categorie_List));

        javax.swing.GroupLayout newBookLayer2Layout = new javax.swing.GroupLayout(newBookLayer2);
        newBookLayer2.setLayout(newBookLayer2Layout);
        newBookLayer2Layout.setHorizontalGroup(
            newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newBookLayer2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TitleError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CodeError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AutorError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditriceError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnnoError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RistampaError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CategoriaError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LinguaError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScaffaleError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newBookLayer2Layout.createSequentialGroup()
                        .addComponent(optionalFieldsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(newBookLayer2Layout.createSequentialGroup()
                        .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staticLabeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staticLabelCode, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staticLabelScaffale)
                            .addComponent(staticLabelLingua)
                            .addComponent(staticLabelCategoria)
                            .addComponent(staticLabelRistampa)
                            .addComponent(staticLabelPubblicaz)
                            .addComponent(staticLabelAutore, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staticLabelEditrice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ScaffaleTextField)
                            .addComponent(LinguaTextField)
                            .addComponent(RistampaTextField)
                            .addComponent(PubblicazTextField)
                            .addComponent(EditriceTextField)
                            .addComponent(TitoloTextField)
                            .addComponent(CodeTextField)
                            .addComponent(AutoreTextField)
                            .addComponent(CategorieComboBox, 0, 138, Short.MAX_VALUE))
                        .addGap(67, 67, 67))))
        );
        newBookLayer2Layout.setVerticalGroup(
            newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newBookLayer2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelCode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CodeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TitoloTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TitleError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelAutore, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AutoreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AutorError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelEditrice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditriceError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelPubblicaz, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PubblicazTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnnoError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelRistampa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RistampaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RistampaError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CategoriaError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CategorieComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelLingua, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LinguaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LinguaError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(newBookLayer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelScaffale, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScaffaleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScaffaleError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(optionalFieldsLabel)
                .addContainerGap())
        );

        newBookLayer3.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);

        AnnullaNewBookButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        AnnullaNewBookButton.setFont(LibrarianStyle.BUTTON_FONT);
        AnnullaNewBookButton.setText("Annulla");
        AnnullaNewBookButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AnnullaNewBookButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AnnullaNewBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnullaNewBookButtonActionPerformed(evt);
            }
        });

        ReporterNewBookLabel.setBackground(newBookLayer1.getBackground());
        ReporterNewBookLabel.setFont(LibrarianStyle.LABEL_FONT);
        ReporterNewBookLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ReporterNewBookLabel.setText("reporterrrrrrrrrrrrr");

        AddBookButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        AddBookButton.setFont(LibrarianStyle.BUTTON_FONT);
        AddBookButton.setText("Aggiungi");
        AddBookButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddBookButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AddBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newBookLayer3Layout = new javax.swing.GroupLayout(newBookLayer3);
        newBookLayer3.setLayout(newBookLayer3Layout);
        newBookLayer3Layout.setHorizontalGroup(
            newBookLayer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newBookLayer3Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(newBookLayer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReporterNewBookLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(newBookLayer3Layout.createSequentialGroup()
                        .addComponent(AnnullaNewBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(AddBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72))
        );
        newBookLayer3Layout.setVerticalGroup(
            newBookLayer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newBookLayer3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReporterNewBookLabel)
                .addGap(30, 30, 30)
                .addGroup(newBookLayer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnnullaNewBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout newBookLayer1Layout = new javax.swing.GroupLayout(newBookLayer1);
        newBookLayer1.setLayout(newBookLayer1Layout);
        newBookLayer1Layout.setHorizontalGroup(
            newBookLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newBookLayer2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(newBookLayer1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(ModifyTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newBookLayer1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(newBookLayer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        newBookLayer1Layout.setVerticalGroup(
            newBookLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newBookLayer1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ModifyTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(newBookLayer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newBookLayer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addNewBookDialogLayout = new javax.swing.GroupLayout(addNewBookDialog.getContentPane());
        addNewBookDialog.getContentPane().setLayout(addNewBookDialogLayout);
        addNewBookDialogLayout.setHorizontalGroup(
            addNewBookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newBookLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addNewBookDialogLayout.setVerticalGroup(
            addNewBookDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newBookLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        newUserDialog.setName("AppLibrarian - New Reader"); // NOI18N
        newUserDialog.setPreferredSize(new java.awt.Dimension(750, 422));
        newUserDialog.setSize(new java.awt.Dimension(750, 422));

        newUserPanel1.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);

        newUserPanel2.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);
        newUserPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 1, 1, new java.awt.Color(0, 102, 153)));
        newUserPanel2.setName("newUserPanel2"); // NOI18N

        nomeLabel2.setFont(LibrarianStyle.LABEL_FONT_2);
        nomeLabel2.setText("Nome: ");

        newUserNomeTxtField.setBackground(newUserPanel2.getBackground());
        newUserNomeTxtField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        newUserNomeTxtField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        newUserNomeTxtField.setToolTipText("username");
        newUserNomeTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        newUserNomeTxtField.setName("usernameTextField"); // NOI18N
        newUserNomeTxtField.setSelectionColor(new java.awt.Color(153, 153, 255));

        cognomeLabel2.setFont(LibrarianStyle.LABEL_FONT_2);
        cognomeLabel2.setText("Cognome: ");

        newUserCognomeTxtField.setBackground(newUserPanel2.getBackground());
        newUserCognomeTxtField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        newUserCognomeTxtField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        newUserCognomeTxtField.setToolTipText("username");
        newUserCognomeTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        newUserCognomeTxtField.setName("usernameTextField"); // NOI18N
        newUserCognomeTxtField.setSelectionColor(new java.awt.Color(153, 153, 255));

        emailLabel2.setFont(LibrarianStyle.LABEL_FONT_2);
        emailLabel2.setText("Email: ");

        newUserEmailTxtField.setBackground(newUserPanel2.getBackground());
        newUserEmailTxtField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        newUserEmailTxtField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        newUserEmailTxtField.setToolTipText("username");
        newUserEmailTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        newUserEmailTxtField.setName("usernameTextField"); // NOI18N
        newUserEmailTxtField.setSelectionColor(new java.awt.Color(153, 153, 255));

        codicefiscaleLabel2.setFont(LibrarianStyle.LABEL_FONT_2);
        codicefiscaleLabel2.setText("Codice fiscale: ");

        newUserCodiceTxtField.setBackground(newUserPanel2.getBackground());
        newUserCodiceTxtField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        newUserCodiceTxtField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        newUserCodiceTxtField.setToolTipText("username");
        newUserCodiceTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        newUserCodiceTxtField.setName("usernameTextField"); // NOI18N
        newUserCodiceTxtField.setSelectionColor(new java.awt.Color(153, 153, 255));

        telephoneLabel2.setFont(LibrarianStyle.LABEL_FONT_2);
        telephoneLabel2.setText("Numero di Telefono: ");

        newUserTelefonoTxtField.setBackground(newUserPanel2.getBackground());
        newUserTelefonoTxtField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        newUserTelefonoTxtField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        newUserTelefonoTxtField.setToolTipText("username");
        newUserTelefonoTxtField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        newUserTelefonoTxtField.setName("usernameTextField"); // NOI18N
        newUserTelefonoTxtField.setSelectionColor(new java.awt.Color(153, 153, 255));

        newuserErrorNomeLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        newuserErrorNomeLabel.setForeground(LibrarianStyle.EXCEPTION_COLOR);
        newuserErrorNomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newuserErrorNomeLabel.setText("eccezione nome");
        newuserErrorNomeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        newuserErrorCognomeLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        newuserErrorCognomeLabel.setForeground(LibrarianStyle.EXCEPTION_COLOR);
        newuserErrorCognomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newuserErrorCognomeLabel.setText("eccezione cognome");
        newuserErrorCognomeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        newuserErrorCodiceLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        newuserErrorCodiceLabel.setForeground(LibrarianStyle.EXCEPTION_COLOR);
        newuserErrorCodiceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newuserErrorCodiceLabel.setText("eccezione codiceFis");
        newuserErrorCodiceLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        newuserErrorEmailLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        newuserErrorEmailLabel.setForeground(LibrarianStyle.EXCEPTION_COLOR);
        newuserErrorEmailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newuserErrorEmailLabel.setText("eccezione email");
        newuserErrorEmailLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        newuserErrorNumTelLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        newuserErrorNumTelLabel.setForeground(LibrarianStyle.EXCEPTION_COLOR);
        newuserErrorNumTelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newuserErrorNumTelLabel.setText("eccezione numTel");
        newuserErrorNumTelLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        newuserSuccessLabel.setFont(LibrarianStyle.SUCCESS_LABEL_FONT);
        newuserSuccessLabel.setForeground(LibrarianStyle.SUCCESS_COLOR);
        newuserSuccessLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newuserSuccessLabel.setText("successo");
        newuserSuccessLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        newuserInquadramentoLabel.setFont(LibrarianStyle.LABEL_FONT_2);
        newuserInquadramentoLabel.setText("Inquadramento:");

        newUserInquadField.setBackground(newUserPanel2.getBackground());
        newUserInquadField.setFont(new java.awt.Font("Delius", 0, 18)); // NOI18N
        newUserInquadField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        newUserInquadField.setToolTipText("username");
        newUserInquadField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        newUserInquadField.setName("usernameTextField"); // NOI18N
        newUserInquadField.setSelectionColor(new java.awt.Color(153, 153, 255));

        newuserErrorInquadLabel.setFont(LibrarianStyle.EXCEPTION_FONT);
        newuserErrorInquadLabel.setForeground(LibrarianStyle.EXCEPTION_COLOR);
        newuserErrorInquadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newuserErrorInquadLabel.setText("eccezione inquadr");
        newuserErrorInquadLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout newUserPanel2Layout = new javax.swing.GroupLayout(newUserPanel2);
        newUserPanel2.setLayout(newUserPanel2Layout);
        newUserPanel2Layout.setHorizontalGroup(
            newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newUserPanel2Layout.createSequentialGroup()
                .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(newUserPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeLabel2)
                            .addComponent(newUserNomeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newuserErrorNomeLabel)
                            .addComponent(emailLabel2)
                            .addComponent(newuserErrorEmailLabel)
                            .addComponent(newUserEmailTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cognomeLabel2)
                            .addComponent(newUserCognomeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newuserErrorCognomeLabel)
                            .addComponent(newuserErrorNumTelLabel)
                            .addComponent(telephoneLabel2)
                            .addComponent(newUserTelefonoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newuserErrorInquadLabel)
                            .addComponent(newuserInquadramentoLabel)
                            .addComponent(newUserInquadField, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newuserErrorCodiceLabel)
                            .addComponent(codicefiscaleLabel2)
                            .addComponent(newUserCodiceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(newUserPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newuserSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)))
                .addGap(30, 30, 30))
        );
        newUserPanel2Layout.setVerticalGroup(
            newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newUserPanel2Layout.createSequentialGroup()
                        .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(newUserPanel2Layout.createSequentialGroup()
                                .addComponent(codicefiscaleLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newUserCodiceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserPanel2Layout.createSequentialGroup()
                                .addComponent(nomeLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newUserNomeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newuserErrorNomeLabel)
                            .addComponent(newuserErrorCodiceLabel))
                        .addGap(18, 18, 18)
                        .addGroup(newUserPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newUserPanel2Layout.createSequentialGroup()
                                .addComponent(emailLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newUserEmailTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newuserErrorEmailLabel))
                            .addGroup(newUserPanel2Layout.createSequentialGroup()
                                .addComponent(newuserInquadramentoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newUserInquadField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newuserErrorInquadLabel))))
                    .addGroup(newUserPanel2Layout.createSequentialGroup()
                        .addComponent(cognomeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newUserCognomeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newuserErrorCognomeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(telephoneLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newUserTelefonoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newuserErrorNumTelLabel)))
                .addGap(47, 47, 47)
                .addComponent(newuserSuccessLabel)
                .addGap(86, 86, 86))
        );

        IndietroButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        IndietroButton.setFont(LibrarianStyle.BUTTON_FONT);
        IndietroButton.setForeground(new java.awt.Color(51, 51, 51));
        IndietroButton.setText("Indietro");
        IndietroButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        IndietroButton.setContentAreaFilled(false);
        IndietroButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        IndietroButton.setMargin(new java.awt.Insets(2, 7, 2, 7));
        IndietroButton.setOpaque(true);
        IndietroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IndietroButtonActionPerformed(evt);
            }
        });

        RegistrationButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        RegistrationButton.setFont(LibrarianStyle.BUTTON_FONT);
        RegistrationButton.setForeground(new java.awt.Color(51, 51, 51));
        RegistrationButton.setText("Registra");
        RegistrationButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        RegistrationButton.setContentAreaFilled(false);
        RegistrationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegistrationButton.setMargin(new java.awt.Insets(2, 7, 2, 7));
        RegistrationButton.setOpaque(true);
        RegistrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrationButtonActionPerformed(evt);
            }
        });

        RegistrationH1.setFont(LibrarianStyle.BIG_TITLE_FONT);
        RegistrationH1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RegistrationH1.setText("AppLibrarian - Reader Registration");
        RegistrationH1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        RegistrationH1.setName("RegistrationH1"); // NOI18N

        javax.swing.GroupLayout newUserPanel1Layout = new javax.swing.GroupLayout(newUserPanel1);
        newUserPanel1.setLayout(newUserPanel1Layout);
        newUserPanel1Layout.setHorizontalGroup(
            newUserPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newUserPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(newUserPanel1Layout.createSequentialGroup()
                .addGroup(newUserPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newUserPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(IndietroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158)
                        .addComponent(RegistrationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newUserPanel1Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(RegistrationH1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newUserPanel1Layout.setVerticalGroup(
            newUserPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RegistrationH1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(newUserPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(newUserPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IndietroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegistrationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout newUserDialogLayout = new javax.swing.GroupLayout(newUserDialog.getContentPane());
        newUserDialog.getContentPane().setLayout(newUserDialogLayout);
        newUserDialogLayout.setHorizontalGroup(
            newUserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newUserPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        newUserDialogLayout.setVerticalGroup(
            newUserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newUserPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        newUserDialog.getAccessibleContext().setAccessibleName("newUserDialog");

        StatisticheDialog.setTitle("appLibrarian - Statistiche");
        StatisticheDialog.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        StatisticheDialog.setMinimumSize(new java.awt.Dimension(988, 504));
        StatisticheDialog.setName("AppLibrarian-Statistiche"); // NOI18N
        StatisticheDialog.setResizable(false);

        StatisticheLayer1.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        StatisticheLayer1.setMinimumSize(new java.awt.Dimension(850, 478));

        TitleLabel1.setBackground(appMainPanel.getBackground());
        TitleLabel1.setFont(LibrarianStyle.BIG_TITLE_FONT);
        TitleLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel1.setLabelFor(this);
        TitleLabel1.setText("App Librarian - Statistiche");
        TitleLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TitleLabel1.setNextFocusableComponent(appMainPanel);

        InputPanel.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        statiticheGeneraliStoricoButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statiticheGeneraliStoricoButton.setFont(LibrarianStyle.BUTTON_FONT);
        statiticheGeneraliStoricoButton.setText("Storico");
        statiticheGeneraliStoricoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statiticheGeneraliStoricoButtonActionPerformed(evt);
            }
        });

        mostraWithSortingButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        mostraWithSortingButton.setFont(LibrarianStyle.BUTTON_FONT);
        mostraWithSortingButton.setText("Mostra");
        mostraWithSortingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostraWithSortingButtonActionPerformed(evt);
            }
        });

        perinquadramentoRadioButton.setBackground(OptionsPanel.getBackground());
        perinquadramentoRadioButton.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        perinquadramentoRadioButton.setText("perInquadramento");
        perinquadramentoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perinquadramentoRadioButtonActionPerformed(evt);
            }
        });

        mostraErrorLabel.setBackground(newBookLayer2.getBackground());
        mostraErrorLabel.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        mostraErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mostraErrorLabel.setText("•");

        statiticheGeneraliPrestitiButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statiticheGeneraliPrestitiButton.setFont(LibrarianStyle.BUTTON_FONT);
        statiticheGeneraliPrestitiButton.setText("Prestiti");
        statiticheGeneraliPrestitiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statiticheGeneraliPrestitiButtonActionPerformed(evt);
            }
        });

        percategoriaRadioButton.setBackground(OptionsPanel.getBackground());
        percategoriaRadioButton.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        percategoriaRadioButton.setText("perCategoria");

        assolutaRadioButton.setBackground(OptionsPanel.getBackground());
        assolutaRadioButton.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        assolutaRadioButton.setText("Assoluta");

        statiticheGeneraliPrenotazioni.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statiticheGeneraliPrenotazioni.setFont(LibrarianStyle.BUTTON_FONT);
        statiticheGeneraliPrenotazioni.setText("Prenotazioni");
        statiticheGeneraliPrenotazioni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statiticheGeneraliPrenotazioniActionPerformed(evt);
            }
        });

        prestitoDiscorsiveLabel1.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        prestitoDiscorsiveLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prestitoDiscorsiveLabel1.setText("Generali");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prestitoDiscorsiveLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(statiticheGeneraliPrestitiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(percategoriaRadioButton)
                                        .addGap(54, 54, 54)
                                        .addComponent(perinquadramentoRadioButton))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(statiticheGeneraliPrenotazioni, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                        .addComponent(statiticheGeneraliStoricoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)))))
                        .addGap(29, 29, 29))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(assolutaRadioButton)
                        .addGap(46, 46, 46)
                        .addComponent(mostraErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mostraWithSortingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(prestitoDiscorsiveLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statiticheGeneraliPrestitiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statiticheGeneraliPrenotazioni, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statiticheGeneraliStoricoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(perinquadramentoRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(percategoriaRadioButton))
                    .addComponent(assolutaRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostraWithSortingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mostraErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(InputPanel.getBackground());
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        StatisticheUserIDTextField.setBackground(InputPanel.getBackground());
        StatisticheUserIDTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        StatisticheUserIDTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        StatisticheUserIDTextField.setText("readerID");
        StatisticheUserIDTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        statiticheUserPrestitiButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statiticheUserPrestitiButton.setFont(LibrarianStyle.BUTTON_FONT);
        statiticheUserPrestitiButton.setText("Prestiti");
        statiticheUserPrestitiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statiticheUserPrestitiButtonActionPerformed(evt);
            }
        });

        statisticheUserError.setBackground(newBookLayer2.getBackground());
        statisticheUserError.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        statisticheUserError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statisticheUserError.setText("•");

        statisticheUserStoricoButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statisticheUserStoricoButton.setFont(LibrarianStyle.BUTTON_FONT);
        statisticheUserStoricoButton.setText("Storico");
        statisticheUserStoricoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statisticheUserStoricoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(statisticheUserError, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(StatisticheUserIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(statiticheUserPrestitiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(statisticheUserStoricoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatisticheUserIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statisticheUserError, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statiticheUserPrestitiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statisticheUserStoricoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout InputPanelLayout = new javax.swing.GroupLayout(InputPanel);
        InputPanel.setLayout(InputPanelLayout);
        InputPanelLayout.setHorizontalGroup(
            InputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InputPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator5))
                .addContainerGap())
            .addGroup(InputPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InputPanelLayout.setVerticalGroup(
            InputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputPanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        IndietroStatisticheButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        IndietroStatisticheButton.setFont(LibrarianStyle.BUTTON_FONT);
        IndietroStatisticheButton.setText("Indietro");
        IndietroStatisticheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IndietroStatisticheButtonActionPerformed(evt);
            }
        });

        TablePanel.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);

        statsPageNumTableLabel.setFont(LibrarianStyle.LABEL_FONT_2);
        statsPageNumTableLabel.setText("P");

        statsPreviousPageTableButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statsPreviousPageTableButton.setFont(LibrarianStyle.BUTTON_FONT);
        statsPreviousPageTableButton.setText("< prev");

        statsNextPageTableButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statsNextPageTableButton.setFont(LibrarianStyle.BUTTON_FONT);
        statsNextPageTableButton.setText("next >");

        statsTable.setFont(LibrarianStyle.LABEL_FONT_3);
        statsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Titolo", "Autore", "Categoria"
            }
        ));
        statsTable.setGridColor(LibrarianStyle.BACKGROUD_DEFAULT_1);
        statsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        statsTable.setShowVerticalLines(false);
        jScrollPane2.setViewportView(statsTable);

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TablePanelLayout.createSequentialGroup()
                        .addComponent(statsPreviousPageTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(statsPageNumTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(statsNextPageTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statsNextPageTableButton)
                    .addComponent(statsPageNumTableLabel)
                    .addComponent(statsPreviousPageTableButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout StatisticheLayer1Layout = new javax.swing.GroupLayout(StatisticheLayer1);
        StatisticheLayer1.setLayout(StatisticheLayer1Layout);
        StatisticheLayer1Layout.setHorizontalGroup(
            StatisticheLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticheLayer1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatisticheLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatisticheLayer1Layout.createSequentialGroup()
                        .addGroup(StatisticheLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StatisticheLayer1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(InputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(StatisticheLayer1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(IndietroStatisticheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(StatisticheLayer1Layout.createSequentialGroup()
                        .addComponent(TitleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        StatisticheLayer1Layout.setVerticalGroup(
            StatisticheLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatisticheLayer1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(StatisticheLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(StatisticheLayer1Layout.createSequentialGroup()
                        .addComponent(InputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IndietroStatisticheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout StatisticheDialogLayout = new javax.swing.GroupLayout(StatisticheDialog.getContentPane());
        StatisticheDialog.getContentPane().setLayout(StatisticheDialogLayout);
        StatisticheDialogLayout.setHorizontalGroup(
            StatisticheDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StatisticheLayer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        StatisticheDialogLayout.setVerticalGroup(
            StatisticheDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StatisticheLayer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        appMainPanel.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);

        UserContextPanel.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        UserContextPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 51, 153)));
        UserContextPanel.setFont(LibrarianStyle.LABEL_FONT_3);

        RuoloLabel.setFont(UserContextPanel.getFont());
        RuoloLabel.setText("Ruolo: ");

        DynamicRuolo.setFont(UserContextPanel.getFont());
        DynamicRuolo.setText(local_librarian.getUser().getInquadramento());

        CodiceLabel.setFont(UserContextPanel.getFont());
        CodiceLabel.setText("Codice: ");

        DynamicCodice.setFont(UserContextPanel.getFont());
        DynamicCodice.setText(local_librarian.getUser().getUserID());

        NomeLabel.setFont(UserContextPanel.getFont());
        NomeLabel.setText("Nome:");

        DynamicNome.setFont(UserContextPanel.getFont());
        DynamicNome.setText(local_librarian.getUser().getNome());

        CognomeLabel.setFont(UserContextPanel.getFont());
        CognomeLabel.setText("Cognome: ");

        DynamicCognome.setFont(UserContextPanel.getFont());
        DynamicCognome.setText(local_librarian.getUser().getCognome());

        EmailLabel.setFont(UserContextPanel.getFont());
        EmailLabel.setText("Email: ");

        DynamicEmail.setFont(UserContextPanel.getFont());
        DynamicEmail.setText(local_librarian.getUser().getEmail());

        NumeroLabel.setFont(UserContextPanel.getFont());
        NumeroLabel.setText("Numero: ");

        DynamicNumero.setFont(UserContextPanel.getFont());
        DynamicNumero.setText(local_librarian.getUser().getNumeroTelefono());

        TitleUserLabel.setFont(LibrarianStyle.LABEL_FONT);
        TitleUserLabel.setText("DATI UTENTE:");

        ModifyButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        ModifyButton.setFont(LibrarianStyle.BUTTON_FONT);
        ModifyButton.setText("Modifica");
        ModifyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserContextPanelLayout = new javax.swing.GroupLayout(UserContextPanel);
        UserContextPanel.setLayout(UserContextPanelLayout);
        UserContextPanelLayout.setHorizontalGroup(
            UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserContextPanelLayout.createSequentialGroup()
                        .addComponent(TitleUserLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(UserContextPanelLayout.createSequentialGroup()
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RuoloLabel)
                            .addComponent(CodiceLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DynamicRuolo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DynamicCodice, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(56, 56, 56))
                    .addGroup(UserContextPanelLayout.createSequentialGroup()
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CognomeLabel)
                            .addComponent(NomeLabel)
                            .addComponent(EmailLabel)
                            .addComponent(NumeroLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DynamicNome)
                            .addComponent(DynamicCognome)
                            .addComponent(DynamicEmail)
                            .addComponent(DynamicNumero))
                        .addGap(63, 63, 63))))
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(ModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UserContextPanelLayout.setVerticalGroup(
            UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserContextPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleUserLabel)
                .addGap(26, 26, 26)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RuoloLabel)
                    .addComponent(DynamicRuolo))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodiceLabel)
                    .addComponent(DynamicCodice))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeLabel)
                    .addComponent(DynamicNome))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CognomeLabel)
                    .addComponent(DynamicCognome))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailLabel)
                    .addComponent(DynamicEmail))
                .addGap(18, 18, 18)
                .addGroup(UserContextPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumeroLabel)
                    .addComponent(DynamicNumero))
                .addGap(43, 43, 43)
                .addComponent(ModifyButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        OptionsPanel.setBackground(UserContextPanel.getBackground());

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        UserDeletePanel.setBackground(OptionsPanel.getBackground());

        deleteUserIDErrorLabel.setBackground(newBookLayer2.getBackground());
        deleteUserIDErrorLabel.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        deleteUserIDErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteUserIDErrorLabel.setText("•");

        discorsiveDeleteuserLabel.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        discorsiveDeleteuserLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        discorsiveDeleteuserLabel.setText("Crea / Elimina Lettore: ");

        deleteUserTextField.setBackground(OptionsPanel.getBackground());
        deleteUserTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        deleteUserTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        deleteUserTextField.setText("readerID");
        deleteUserTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        deleteUserButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        deleteUserButton.setFont(LibrarianStyle.BUTTON_FONT);
        deleteUserButton.setForeground(new java.awt.Color(255, 102, 102));
        deleteUserButton.setText("Cancella");
        deleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserButtonActionPerformed(evt);
            }
        });

        creaReaderButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        creaReaderButton.setFont(LibrarianStyle.BUTTON_FONT);
        creaReaderButton.setText("Crea");
        creaReaderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaReaderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserDeletePanelLayout = new javax.swing.GroupLayout(UserDeletePanel);
        UserDeletePanel.setLayout(UserDeletePanelLayout);
        UserDeletePanelLayout.setHorizontalGroup(
            UserDeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserDeletePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserDeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserDeletePanelLayout.createSequentialGroup()
                        .addGroup(UserDeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(UserDeletePanelLayout.createSequentialGroup()
                                .addComponent(deleteUserIDErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteUserTextField))
                            .addGroup(UserDeletePanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(discorsiveDeleteuserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserDeletePanelLayout.createSequentialGroup()
                        .addComponent(creaReaderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        UserDeletePanelLayout.setVerticalGroup(
            UserDeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserDeletePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(discorsiveDeleteuserLabel)
                .addGap(18, 18, 18)
                .addGroup(UserDeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteUserIDErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(UserDeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteUserButton)
                    .addComponent(creaReaderButton))
                .addContainerGap())
        );

        deleteUserTextField.getAccessibleContext().setAccessibleName("deleteReaderTextField");

        PrenotazioneCreationPanel.setBackground(OptionsPanel.getBackground());

        creanuovaPrenotazioneErrorLabel.setBackground(newBookLayer2.getBackground());
        creanuovaPrenotazioneErrorLabel.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        creanuovaPrenotazioneErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        creanuovaPrenotazioneErrorLabel.setText("•");

        creanuovaPrenotazionerButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        creanuovaPrenotazionerButton.setFont(LibrarianStyle.BUTTON_FONT);
        creanuovaPrenotazionerButton.setText("Crea");
        creanuovaPrenotazionerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creanuovaPrenotazionerButtonActionPerformed(evt);
            }
        });

        visualizzaPrenotazioneButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        visualizzaPrenotazioneButton.setFont(LibrarianStyle.BUTTON_FONT);
        visualizzaPrenotazioneButton.setText("Visualizza");
        visualizzaPrenotazioneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizzaPrenotazioneButtonActionPerformed(evt);
            }
        });

        discorsivecreanuovaPrenotazioneLabel1.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        discorsivecreanuovaPrenotazioneLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        discorsivecreanuovaPrenotazioneLabel1.setText("Crea / Visualizza / Disdici Prenotazioni:");

        creanuovaPrenotazioneTextField.setBackground(OptionsPanel.getBackground());
        creanuovaPrenotazioneTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        creanuovaPrenotazioneTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        creanuovaPrenotazioneTextField.setText("readerID");
        creanuovaPrenotazioneTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        creanuovaPrenotazioneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creanuovaPrenotazioneTextFieldActionPerformed(evt);
            }
        });

        disdiciPrenotazionerButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        disdiciPrenotazionerButton.setFont(LibrarianStyle.BUTTON_FONT);
        disdiciPrenotazionerButton.setText("Disdici");
        disdiciPrenotazionerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disdiciPrenotazionerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PrenotazioneCreationPanelLayout = new javax.swing.GroupLayout(PrenotazioneCreationPanel);
        PrenotazioneCreationPanel.setLayout(PrenotazioneCreationPanelLayout);
        PrenotazioneCreationPanelLayout.setHorizontalGroup(
            PrenotazioneCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrenotazioneCreationPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(discorsivecreanuovaPrenotazioneLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrenotazioneCreationPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(creanuovaPrenotazionerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(visualizzaPrenotazioneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(disdiciPrenotazionerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(PrenotazioneCreationPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(creanuovaPrenotazioneErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(creanuovaPrenotazioneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PrenotazioneCreationPanelLayout.setVerticalGroup(
            PrenotazioneCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrenotazioneCreationPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(discorsivecreanuovaPrenotazioneLabel1)
                .addGap(27, 27, 27)
                .addGroup(PrenotazioneCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creanuovaPrenotazioneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creanuovaPrenotazioneErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PrenotazioneCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(visualizzaPrenotazioneButton)
                    .addComponent(creanuovaPrenotazionerButton)
                    .addComponent(disdiciPrenotazionerButton))
                .addContainerGap())
        );

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);

        PrenotazionePanel.setBackground(UserContextPanel.getBackground());

        prestitoTextField.setBackground(OptionsPanel.getBackground());
        prestitoTextField.setFont(LibrarianStyle.LABEL_FONT_3);
        prestitoTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prestitoTextField.setText("readerID");
        prestitoTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        prestitoErrorLabel.setBackground(newBookLayer2.getBackground());
        prestitoErrorLabel.setFont(LibrarianStyle.POINT_CUSTOM_FONT);
        prestitoErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prestitoErrorLabel.setText("•");

        prestitoButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        prestitoButton.setFont(LibrarianStyle.BUTTON_FONT);
        prestitoButton.setText("Attiva");
        prestitoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prestitoButtonActionPerformed(evt);
            }
        });

        prestitoDiscorsiveLabel.setFont(LibrarianStyle.DISCORSIVE_LABEL_FONT);
        prestitoDiscorsiveLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prestitoDiscorsiveLabel.setText("Attiva / Disattiva / Riconsegna Prestito: ");

        riconsegnaButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        riconsegnaButton.setFont(LibrarianStyle.BUTTON_FONT);
        riconsegnaButton.setText("Riconsegna");
        riconsegnaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riconsegnaButtonActionPerformed(evt);
            }
        });

        disattivaPrestitoButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        disattivaPrestitoButton.setFont(LibrarianStyle.BUTTON_FONT);
        disattivaPrestitoButton.setText("Disattiva");
        disattivaPrestitoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disattivaPrestitoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PrenotazionePanelLayout = new javax.swing.GroupLayout(PrenotazionePanel);
        PrenotazionePanel.setLayout(PrenotazionePanelLayout);
        PrenotazionePanelLayout.setHorizontalGroup(
            PrenotazionePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrenotazionePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PrenotazionePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrenotazionePanelLayout.createSequentialGroup()
                        .addComponent(prestitoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(disattivaPrestitoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(riconsegnaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(PrenotazionePanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(PrenotazionePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrenotazionePanelLayout.createSequentialGroup()
                                .addComponent(prestitoErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(prestitoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(PrenotazionePanelLayout.createSequentialGroup()
                                .addComponent(prestitoDiscorsiveLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(40, 40, 40))))))
        );
        PrenotazionePanelLayout.setVerticalGroup(
            PrenotazionePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrenotazionePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prestitoDiscorsiveLabel)
                .addGap(18, 18, 18)
                .addGroup(PrenotazionePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prestitoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prestitoErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PrenotazionePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prestitoButton)
                    .addComponent(riconsegnaButton)
                    .addComponent(disattivaPrestitoButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout OptionsPanelLayout = new javax.swing.GroupLayout(OptionsPanel);
        OptionsPanel.setLayout(OptionsPanelLayout);
        OptionsPanelLayout.setHorizontalGroup(
            OptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsPanelLayout.createSequentialGroup()
                .addComponent(UserDeletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PrenotazioneCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PrenotazionePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        OptionsPanelLayout.setVerticalGroup(
            OptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsPanelLayout.createSequentialGroup()
                .addGroup(OptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OptionsPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(UserDeletePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(OptionsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PrenotazionePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(PrenotazioneCreationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        TitleLabel.setBackground(appMainPanel.getBackground());
        TitleLabel.setFont(LibrarianStyle.BIG_TITLE_FONT);
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setLabelFor(this);
        TitleLabel.setText("App Librarian");
        TitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TitleLabel.setNextFocusableComponent(appMainPanel);

        BooksTable.setFont(LibrarianStyle.LABEL_FONT_3);
        BooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Titolo", "Autore", "Categoria"
            }
        ));
        BooksTable.setGridColor(LibrarianStyle.BACKGROUD_DEFAULT_1);
        BooksTable.setSelectionBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        BooksTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        BooksTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(BooksTable);
        BooksTable.getAccessibleContext().setAccessibleName("BooksTable");

        NextPageButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        NextPageButton.setFont(LibrarianStyle.BUTTON_FONT);
        NextPageButton.setText("next >");
        NextPageButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NextPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextPageButtonActionPerformed(evt);
            }
        });

        PreviousButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        PreviousButton.setFont(LibrarianStyle.BUTTON_FONT);
        PreviousButton.setText("< prev");
        PreviousButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PreviousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousButtonActionPerformed(evt);
            }
        });

        EliminaButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        EliminaButton.setFont(LibrarianStyle.BUTTON_FONT);
        EliminaButton.setText("Elimina");
        EliminaButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EliminaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EliminaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminaButtonActionPerformed(evt);
            }
        });

        PageNumLabel.setFont(LibrarianStyle.LABEL_FONT_2);
        PageNumLabel.setText("P");

        addNewBookButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        addNewBookButton.setFont(LibrarianStyle.BUTTON_FONT);
        addNewBookButton.setText("Aggiungi");
        addNewBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewBookButtonActionPerformed(evt);
            }
        });

        RefreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Client/recycle_icon_1.jpg"))); // NOI18N
        RefreshButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        RefreshButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(appMainPanel.getBackground());

        SearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Client/search_icon_1.jpg"))); // NOI18N
        SearchButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SearchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SearchButton.setMinimumSize(new java.awt.Dimension(35, 35));
        SearchButton.setPreferredSize(new java.awt.Dimension(30, 30));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        SearchTextField.setFont(LibrarianStyle.LABEL_FONT_2);
        SearchTextField.setText("cerca");
        SearchTextField.setToolTipText("");

        statisticheButton.setBackground(LibrarianStyle.BUTTON_DEFAULT_COLOR);
        statisticheButton.setFont(LibrarianStyle.BUTTON_FONT);
        statisticheButton.setText("Statistiche");
        statisticheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statisticheButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statisticheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchTextField)
                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statisticheButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        SearchTextField.getAccessibleContext().setAccessibleName("SearchTextField");

        javax.swing.GroupLayout appMainPanelLayout = new javax.swing.GroupLayout(appMainPanel);
        appMainPanel.setLayout(appMainPanelLayout);
        appMainPanelLayout.setHorizontalGroup(
            appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OptionsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(appMainPanelLayout.createSequentialGroup()
                        .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 995, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(appMainPanelLayout.createSequentialGroup()
                                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UserContextPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1)
                                    .addGroup(appMainPanelLayout.createSequentialGroup()
                                        .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(EliminaButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(addNewBookButton)
                                        .addGap(327, 327, 327)
                                        .addComponent(PreviousButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(PageNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(NextPageButton)))))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        appMainPanelLayout.setVerticalGroup(
            appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appMainPanelLayout.createSequentialGroup()
                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appMainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appMainPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(UserContextPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EliminaButton)
                        .addComponent(addNewBookButton)
                        .addComponent(PreviousButton))
                    .addGroup(appMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PageNumLabel)
                        .addComponent(NextPageButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        UserContextPanel.getAccessibleContext().setAccessibleName("UserContextPanel");

        EliminaOption.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_1);
        EliminaOption.setMessage("Sei sicuro di voler eliminare ?");
        EliminaOption.setFont(LibrarianStyle.LABEL_FONT_3);
        EliminaOption.setMaximumSize(new java.awt.Dimension(250, 90));
        EliminaOption.setMinimumSize(new java.awt.Dimension(250, 90));
        EliminaOption.setName(""); // NOI18N
        EliminaOption.setPreferredSize(new java.awt.Dimension(250, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 388, Short.MAX_VALUE)
                    .addComponent(EliminaOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 389, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 289, Short.MAX_VALUE)
                    .addComponent(EliminaOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 298, Short.MAX_VALUE)))
        );

        EliminaOption.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    Thread BookInsertSuccessThread = new Thread(new Runnable() {
        @Override
        public void run() {

            try {
                if (book_creation_success) {

                    refreshGenericLabel(ReporterNewBookLabel, LibrarianStyle.SUCCESS_COLOR, "Libro Aggiunto con Successo");

                    Thread.sleep(1000);

                    addNewBookDialog.setVisible(false);
                    setAddBookDialog();

                } else { }
                
                book_creation_success = false;

            } catch (InterruptedException ex) {
                Logger.getLogger(appLibrarianRegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    });

    private void initBackEnd() throws RemoteException {
        
        normalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_librarian.builderBookTableModel());
        BooksTable.repaint();

        initErrorNewBookLabels();
        initErrorNewUserLabels();

        setBookTableListener();
        setDeleteBookButtonListener();
        setDeleteUserTextField();

        setDisdiciTableListener();

        setNuovaPrenotazUserTextField();
        setNuovaPrenotazTableListener();

        setPrestitoTableListener();
        setPrestitoUserTextField();
        setRiconsegnaTableListener();

        setCurrentPage(PageNumLabel,PageTableIndex);
        setCurrentPage(statsPageNumTableLabel, StatsPageIndex);

        setModifyDialog();
        setAddBookDialog();
        setAddNewUserDialog();
        
        encapsulateRadioButton();

        setNewBookCategoriesComboBox();

        EliminaButton.setEnabled(false);
        EliminaOption.setVisible(false);

        disdiciPrenotazionerButton.setEnabled(false);
        creanuovaPrenotazionerButton.setEnabled(false);
        visualizzaPrenotazioneButton.setEnabled(false);
        creanuovaPrenotazioneErrorLabel.setVisible(false);
        statisticheUserError.setVisible(false);

        deleteUserIDErrorLabel.setVisible(false);
        deleteUserButton.setEnabled(false);
        creaReaderButton.setEnabled(false);

        prestitoButton.setEnabled(false);
        prestitoErrorLabel.setVisible(false);
        riconsegnaButton.setEnabled(false);
        disattivaPrestitoButton.setEnabled(false);
        
        mostraErrorLabel.setVisible(false);

        
        
    }

    private void initErrorNewBookLabels() {
        
        CodeError.setVisible(false);
        TitleError.setVisible(false);
        AutorError.setVisible(false);
        EditriceError.setVisible(false);
        AnnoError.setVisible(false);
        RistampaError.setVisible(false);
        CategoriaError.setVisible(false);
        LinguaError.setVisible(false);
        ScaffaleError.setVisible(false);
        


    }
    
    private void initErrorNewUserLabels()
    {
        newuserErrorCodiceLabel.setVisible(false);
        newuserErrorNomeLabel.setVisible(false);
        newuserErrorCognomeLabel.setVisible(false);
        newuserErrorEmailLabel.setVisible(false);
        newuserErrorInquadLabel.setVisible(false);
        newuserErrorNumTelLabel.setVisible(false);
        

    }

    private void normalizejTable(javax.swing.JTable generic_table,
                                 javax.swing.JButton prev_associated,
                                 javax.swing.JButton next_associated,
                                 javax.swing.JLabel page_index_label,
                                 int page_num,
                                 DefaultTableModel model) {

        PageTableIndex = 0;
        setCurrentPage( page_index_label, page_num);

        Columns = new Vector<>();

        for (int i = 0; i < model.getColumnCount(); i++) {
            Columns.add(model.getColumnName(i));
        }

        Vector<Vector<Object>> all_elem = new Vector<>();

        if (model.getRowCount() <= MAX_ROW_PER_PAGE) {
            generic_table.setModel(model);

            next_associated.setEnabled(false);
            prev_associated.setEnabled(false);
        } else {

            all_elem = model.getDataVector();

            page_vector = new Vector<>();

            Vector<Vector<Object>> vect = new Vector<>();

            int left_elements = all_elem.size();
            int cycle = 1;

            for (int i = 0; i < all_elem.size(); i++) {
                vect.add(all_elem.elementAt(i));

                left_elements--;

                if (left_elements == all_elem.size() - MAX_ROW_PER_PAGE * cycle) {
                    page_vector.add(vect);
                    vect = new Vector<>();
                    cycle++;
                } else if (left_elements == 0) {
                    page_vector.add(vect);
                }
            }

            generic_table.setModel(new DefaultTableModel(page_vector.elementAt(PageTableIndex), Columns));

            prev_associated.setEnabled(false);

            if (page_vector.size() > 1) {
                next_associated.setEnabled(true);
            }

            
        }
    }

    private String getSelectedISBNFromBooksTable()
    {
        if(BooksTable.getSelectedRow() == -1)
        {
            return "";
        }

        DefaultTableModel BookTableModel = (DefaultTableModel) BooksTable.getModel();

        String[] row_elements;

        Object obj = BookTableModel.getDataVector().elementAt(BooksTable.getSelectedRow());

        String obj_toString = obj.toString();
        String concrete_objString;

        concrete_objString = obj_toString.replace('[', '\0');
        concrete_objString = concrete_objString.replace(']', '\0');
        concrete_objString = concrete_objString.replace(' ', '\0');

        row_elements = concrete_objString.split(",");

        return row_elements[0];
    }

    private void setBookTableListener() {
        BooksTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                SwingUtilities.invokeLater(
                        new Runnable() {
                    public void run() {
                        EliminaButton.setEnabled(true);
                    }
                });
            }
        });
    }

    private void setDeleteBookButtonListener() {
        EliminaButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                e.setSource(BooksTable.getSelectionModel());
                EliminaButton.setEnabled(false);
            }
        });
    }

    private void setModifyCloseSafe() {
        ModifyDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ModifyDialog.getParent().setEnabled(true);
                ModifyDialog.getParent().setVisible(true);
            }
        });
    }

    private void setDeleteUserTextField() {
        deleteUserTextField.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                enableDisableDeleteButton();
                enableDisablecreateUserButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                enableDisableDeleteButton();
                enableDisablecreateUserButton();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                enableDisableDeleteButton();
                enableDisablecreateUserButton();
            }

        });

    }

    private void setNewBookCategoriesComboBox()
    {
        CategorieComboBox.setBackground(LibrarianStyle.BACKGROUD_DEFAULT_2);
    }

    private void enableDisableDeleteButton() {
        if (deleteUserTextField.getText().isEmpty()) {
            deleteUserButton.setEnabled(false);
        } else {
            deleteUserButton.setEnabled(true);
        }

    }
    
    private void enableDisablecreateUserButton() {
        if (deleteUserTextField.getText().isEmpty()) {
            creaReaderButton.setEnabled(false);
        } else {
            creaReaderButton.setEnabled(true);
        }

    }

    private void setDisdiciTableListener() {
        BooksTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                SwingUtilities.invokeLater(
                        new Runnable() {
                    public void run() {
                        disdiciPrenotazionerButton.setEnabled(true);
                    }
                });
            }
        });
    }

    private void setNuovaPrenotazTableListener() {
        BooksTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                SwingUtilities.invokeLater(
                        new Runnable() {
                    public void run() {
                        creanuovaPrenotazionerButton.setEnabled(true);
                    }
                });
            }
        });
    }

    private void setNuovaPrenotazUserTextField() {
        creanuovaPrenotazioneTextField.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                enableDisableCreaNuovaButton();
                enableDisableVisualizzaButton();
                enableDisableDisdiciButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                enableDisableCreaNuovaButton();
                enableDisableVisualizzaButton();
                enableDisableDisdiciButton();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                enableDisableCreaNuovaButton();
                enableDisableVisualizzaButton();
                enableDisableDisdiciButton();
            }

        });

    }

    private void enableDisableCreaNuovaButton() {
        if (creanuovaPrenotazioneTextField.getText().isEmpty()) {
            creanuovaPrenotazionerButton.setEnabled(false);
        } else {
            creanuovaPrenotazionerButton.setEnabled(true);
        }

    }

    private void enableDisableVisualizzaButton() {
        if (creanuovaPrenotazioneTextField.getText().isEmpty()) {
            visualizzaPrenotazioneButton.setEnabled(false);
        } else {
            visualizzaPrenotazioneButton.setEnabled(true);
        }

    }

    private void enableDisableDisdiciButton() {
        if (creanuovaPrenotazioneTextField.getText().isEmpty()) {
            disdiciPrenotazionerButton.setEnabled(false);
        } else {
            disdiciPrenotazionerButton.setEnabled(true);
        }

    }

    private void setPrestitoTableListener() {
        BooksTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                SwingUtilities.invokeLater(
                        new Runnable() {
                    public void run() {
                        prestitoButton.setEnabled(true);
                    }
                });
            }
        });
    }

    private void setRiconsegnaTableListener() {
        BooksTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                SwingUtilities.invokeLater(
                        new Runnable() {
                    public void run() {
                        riconsegnaButton.setEnabled(true);
                    }
                });
            }
        });
    }

    private void setPrestitoUserTextField() {
        prestitoTextField.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                enableDisablePrestitoButton();
                enableDisableRiconsegnaButton();
                enableDisableDisattivaButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                enableDisablePrestitoButton();
                enableDisableRiconsegnaButton();
                enableDisableDisattivaButton();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                enableDisablePrestitoButton();
                enableDisableRiconsegnaButton();
                enableDisableDisattivaButton();
            }

        });

    }

    private void enableDisablePrestitoButton() {
        if (prestitoTextField.getText().isEmpty()) {
            prestitoButton.setEnabled(false);
        } else {
            prestitoButton.setEnabled(true);
        }
    }

    private void enableDisableDisattivaButton() {
        if (prestitoTextField.getText().isEmpty() || getSelectedISBNFromBooksTable().isEmpty()) {
            disattivaPrestitoButton.setEnabled(false);
        } else {
                disattivaPrestitoButton.setEnabled(true);
        }
    }

    private void enableDisableRiconsegnaButton() {
        if (prestitoTextField.getText().isEmpty()) {
            riconsegnaButton.setEnabled(false);
        } else {
            riconsegnaButton.setEnabled(true);
        }
    }
    
    private void encapsulateRadioButton()
    {
        ButtonGroup radio_selection = new ButtonGroup();
        
        radio_selection.add(percategoriaRadioButton);
        radio_selection.add(perinquadramentoRadioButton);
        radio_selection.add(assolutaRadioButton);
        
    }

    private void setCurrentPage(javax.swing.JLabel label_page_num, int index) {
        label_page_num.setText(Integer.toString(index + 1));
    }

    private void setAddBookCloseSafe() {
        addNewBookDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                addNewBookDialog.getParent().setEnabled(true);
                addNewBookDialog.getParent().setVisible(true);
            }
        });
    }
    

    private void setModifyDialog() {

        OldPasswordTxtField.setText("");
        NewPasswordTextField.setText("");
        ModifyEmailTextField.setText("");
        ModifyNumberTextField.setText("");
        ModifyInquadTextField.setText("");

        ModifyReporterLabel.setVisible(false);

        AskinDeletingOptionPane.setVisible(false);
        AskinDeletingOptionPane.setEnabled(false);

        setModifyCloseSafe();

    }

    private void setAddBookDialog() {

        CodeTextField.setText("");
        TitoloTextField.setText("");
        AutoreTextField.setText("");
        EditriceTextField.setText("");
        PubblicazTextField.setText("");
        RistampaTextField.setText("");
        LinguaTextField.setText("");
        ScaffaleTextField.setText("");

        ReporterNewBookLabel.setVisible(false);

        initErrorNewBookLabels();

        setAddBookCloseSafe();

    }
    
    private void setAddNewUserDialog()
    {
        newUserCodiceTxtField.setText("");
        newUserCognomeTxtField.setText("");
        newUserEmailTxtField.setText("");
        newUserInquadField.setText("");
        newUserNomeTxtField.setText("");
        newUserTelefonoTxtField.setText("");

        initErrorNewUserLabels();
        
        newuserSuccessLabel.setVisible(false); 
 
    }

    private void refreshGenericLabel(javax.swing.JLabel label_toUpadte, java.awt.Color color, String to_display) {
        SwingUtilities.invokeLater(
                new Runnable() {

            public void run() {

                label_toUpadte.setForeground(color);
                label_toUpadte.setText(to_display);
                label_toUpadte.setVisible(true);

                label_toUpadte.getParent().revalidate();

            }
        });

    }

    private void refreshTooltipLabel(javax.swing.JLabel label_toUpadte, java.awt.Color color, String to_display) {
        SwingUtilities.invokeLater(
                new Runnable() {

            public void run() {

                label_toUpadte.setForeground(color);
                label_toUpadte.setToolTipText(to_display);
                label_toUpadte.setVisible(true);

                label_toUpadte.getParent().revalidate();

            }
        });

    }

    private boolean checkBookFields() throws RemoteException {
        final String CORRECT_TOLLTIP = "corretto";

        int controller;
        int correct = 0;

        MatteBorder default_border = (MatteBorder) CodeTextField.getBorder();
        MatteBorder exceptionBorder = new MatteBorder(0, 0, 1, 0, LibrarianStyle.EXCEPTION_COLOR);

        controller = local_librarian.checker.bookChecker.checkISBN(CodeTextField.getText());
        if (controller != 0) {
            CodeTextField.setBorder(exceptionBorder);

            if (controller == 1) {
                refreshTooltipLabel(CodeError, LibrarianStyle.EXCEPTION_COLOR, "è vuoto");
            }
            if (controller == 2) {
                refreshTooltipLabel(CodeError, LibrarianStyle.EXCEPTION_COLOR, "deve essere di 3 caratteri");
            }
            if (controller == 3) {
                refreshTooltipLabel(CodeError, LibrarianStyle.EXCEPTION_COLOR, "deve contenere solo numeri");
            }

        } else if (local_librarian.checkParametricExisting("ISBN", CodeTextField.getText(), Libro.OBJ_TYPE)) {
            refreshTooltipLabel(CodeError, LibrarianStyle.EXCEPTION_COLOR, "Libro già nel catalogo");
        } else {

            CodeTextField.setBorder(default_border);
            refreshTooltipLabel(CodeError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }

        controller = local_librarian.checker.bookChecker.checkTitle(TitoloTextField.getText());
        if (controller != 0) {
            TitoloTextField.setBorder(exceptionBorder);

            if (controller == 1) {
                refreshTooltipLabel(TitleError, LibrarianStyle.EXCEPTION_COLOR, "è vuoto");
            }
            if (controller == 2) {
                refreshTooltipLabel(TitleError, LibrarianStyle.EXCEPTION_COLOR, "troppo lungo !");
            }
        } else {

            TitoloTextField.setBorder(default_border);
            refreshTooltipLabel(TitleError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }

        controller = local_librarian.checker.bookChecker.checkAutor(AutoreTextField.getText());
        if (controller != 0) {
            AutoreTextField.setBorder(exceptionBorder);

            if (controller == 1) {
                refreshTooltipLabel(AutorError, LibrarianStyle.EXCEPTION_COLOR, "è vuoto");
            }
            if (controller == 2) {
                refreshTooltipLabel(AutorError, LibrarianStyle.EXCEPTION_COLOR, "troppo lungo !");
            }
            if (controller == 3) {
                refreshTooltipLabel(AutorError, LibrarianStyle.EXCEPTION_COLOR, "deve contenere solo lettere !");
            }
        } else {

            AutoreTextField.setBorder(default_border);
            refreshTooltipLabel(AutorError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }

        controller = local_librarian.checker.bookChecker.checkEditrice(EditriceTextField.getText());
        if (controller != 0) {
            EditriceTextField.setBorder(exceptionBorder);

            if (controller == 1) {
                refreshTooltipLabel(EditriceError, LibrarianStyle.EXCEPTION_COLOR, "è vuoto!");
            }
            if (controller == 2) {
                refreshTooltipLabel(EditriceError, LibrarianStyle.EXCEPTION_COLOR, "troppo lungo!");
            }
        } else {
            EditriceTextField.setBorder(default_border);
            refreshTooltipLabel(EditriceError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }

        controller = local_librarian.checker.bookChecker.checkAnno(PubblicazTextField.getText());
        if (controller != 0) {
            PubblicazTextField.setBorder(exceptionBorder);

            if (controller == 1) {
                refreshTooltipLabel(AnnoError, LibrarianStyle.EXCEPTION_COLOR, "è vuoto!");
            }
            if (controller == 2) {
                refreshTooltipLabel(AnnoError, LibrarianStyle.EXCEPTION_COLOR, "lunghezza richiesta: 4");
            }
            if (controller == 3) {
                refreshTooltipLabel(AnnoError, LibrarianStyle.EXCEPTION_COLOR, "deve contenere solo numeri");
            }
        } else {
            PubblicazTextField.setBorder(default_border);
            refreshTooltipLabel(AnnoError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }

        if (!RistampaTextField.getText().isEmpty()) {

            controller = local_librarian.checker.bookChecker.checkAnnoRistampa(RistampaTextField.getText());

            if (controller != 0) {
                RistampaTextField.setBorder(exceptionBorder);

                if (controller == 2) {
                    refreshTooltipLabel(RistampaError, LibrarianStyle.EXCEPTION_COLOR, "troppo corto, minimo: 4");
                }
                if (controller == 3) {
                    refreshTooltipLabel(RistampaError, LibrarianStyle.EXCEPTION_COLOR, "deve contenere solo numeri");
                }
            } else {
                RistampaTextField.setBorder(default_border);
                refreshTooltipLabel(RistampaError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

                correct++;
            }
        } else {
            RistampaTextField.setBorder(default_border);
            refreshTooltipLabel(RistampaError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }


        controller = local_librarian.checker.bookChecker.checkLingua(LinguaTextField.getText());
        if (controller != 0) {
            LinguaTextField.setBorder(exceptionBorder);

            if (controller == 1) {
                refreshTooltipLabel(LinguaError, LibrarianStyle.EXCEPTION_COLOR, "è vuoto");
            }
            if (controller == 2) {
                refreshTooltipLabel(LinguaError, LibrarianStyle.EXCEPTION_COLOR, "non può contenere numeri !");
            }

        } else {
            LinguaTextField.setBorder(default_border);
            refreshTooltipLabel(LinguaError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }

        if (!ScaffaleTextField.getText().isEmpty()) {

            controller = local_librarian.checker.bookChecker.checkScaffale(ScaffaleTextField.getText());

            if (controller != 0) {
                ScaffaleTextField.setBorder(exceptionBorder);

                if (controller == 2) {
                    refreshTooltipLabel(ScaffaleError, LibrarianStyle.EXCEPTION_COLOR, "troppo lungo, max 2");
                }
                if (controller == 3) {
                    refreshTooltipLabel(ScaffaleError, LibrarianStyle.EXCEPTION_COLOR, "deve contenere un numero");
                }

            } else {
                ScaffaleTextField.setBorder(default_border);
                refreshTooltipLabel(ScaffaleError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

                correct++;
            }
        } else {
            ScaffaleTextField.setBorder(default_border);
            refreshTooltipLabel(ScaffaleError, LibrarianStyle.SUCCESS_COLOR, CORRECT_TOLLTIP);

            correct++;
        }

        
        return correct == TOTAL_BOOK_FIELD;
    }
    
    private boolean checkAllnewUserField() throws RemoteException {
        
        final int NEWUSER_TOTAL_FIELD = 6;
        
        int controller;
        int correct = 0;

        MatteBorder exceptionborder = new MatteBorder(0, 0, 1, 0, LibrarianStyle.EXCEPTION_COLOR);

        controller = local_librarian.checker.userChecker.checkAvaliableNomeCognome(newUserNomeTxtField.getText());
        if (controller != 0) {

            newUserNomeTxtField.setBorder(exceptionborder);

            if (controller == 1) {
                refreshGenericLabel(newuserErrorNomeLabel, newuserErrorNomeLabel.getForeground(), "è vuoto");
            }
            if (controller == 2) {
                refreshGenericLabel(newuserErrorNomeLabel, newuserErrorNomeLabel.getForeground(), "limite caratteri superato");
            }
            if (controller == 3) {
                refreshGenericLabel(newuserErrorNomeLabel, newuserErrorNomeLabel.getForeground(), "ammesse solo lettere");
            }
        } else {
            newUserNomeTxtField.setBorder(LibrarianStyle.DEFAULT_MATTE_REGISTRATION);
            newuserErrorNomeLabel.setVisible(false);
            correct++;
        }

        controller = local_librarian.checker.userChecker.checkAvaliableNomeCognome(newUserCognomeTxtField.getText());
        if (controller != 0) {
            newUserCognomeTxtField.setBorder(exceptionborder);

            if (controller == 1) {
                refreshGenericLabel(newuserErrorCognomeLabel, newuserErrorCognomeLabel.getForeground(), "è vuoto");
            }
            if (controller == 2) {
                refreshGenericLabel(newuserErrorCognomeLabel, newuserErrorCognomeLabel.getForeground(), "limite caratteri superato");
            }
            if (controller == 3) {
                refreshGenericLabel(newuserErrorCognomeLabel, newuserErrorCognomeLabel.getForeground(), "ammesse solo lettere");
            }
        } else {
            newUserCognomeTxtField.setBorder(LibrarianStyle.DEFAULT_MATTE_REGISTRATION);
            newuserErrorCognomeLabel.setVisible(false);

            correct++;
        }

        controller = local_librarian.checker.userChecker.checkCodiceFiscale(newUserCodiceTxtField.getText());
        if (controller != 0) {
            newUserCodiceTxtField.setBorder(exceptionborder);

            if (controller == 1) {
                refreshGenericLabel(newuserErrorCodiceLabel, newuserErrorCodiceLabel.getForeground(), "è vuoto");
            }
            if (controller == 2) {
                refreshGenericLabel(newuserErrorCodiceLabel, newuserErrorCodiceLabel.getForeground(), "troppo corto, minimo: 4");
            }
            if (controller == 3) {
                refreshGenericLabel(newuserErrorCodiceLabel, newuserErrorCodiceLabel.getForeground(), "troppo lungo, massimo: 5");
            }
        } else if (local_librarian.checkParametricExisting("USERID", newUserCodiceTxtField.getText(), 2)) {
            refreshGenericLabel(newuserErrorCodiceLabel, newuserErrorCodiceLabel.getForeground(), "ERRORE: utente già esistente");
        } else {
            newUserCodiceTxtField.setBorder(LibrarianStyle.DEFAULT_MATTE_REGISTRATION);
            newuserErrorCodiceLabel.setVisible(false);
            correct++;
        }

        controller = local_librarian.checker.userChecker.checkEmail(newUserEmailTxtField.getText());
        if (controller != 0) {
            newUserEmailTxtField.setBorder(exceptionborder);

            if (controller == 1) {
                refreshGenericLabel(newuserErrorEmailLabel, newuserErrorEmailLabel.getForeground(), "è vuoto");
            }
            if (controller == 2) {
                refreshGenericLabel(newuserErrorEmailLabel, newuserErrorEmailLabel.getForeground(), "superata lunghezza max: 30");
            }
            if (controller == 3) {
                refreshGenericLabel(newuserErrorEmailLabel, newuserErrorEmailLabel.getForeground(), "errore format, manca: @");
            }
            if (controller == 4) {
                refreshGenericLabel(newuserErrorEmailLabel, newuserErrorEmailLabel.getForeground(), "troppi simboli '@'");
            }
            if (controller == 5) {
                refreshGenericLabel(newuserErrorEmailLabel, newuserErrorEmailLabel.getForeground(), "nessun carattere prima di '@'");
            }
            if (controller == 6) {
                refreshGenericLabel(newuserErrorEmailLabel, newuserErrorEmailLabel.getForeground(), "errore formato, manca: '.'");
            }
        } else {
            newUserEmailTxtField.setBorder(LibrarianStyle.DEFAULT_MATTE_REGISTRATION);
            newuserErrorEmailLabel.setVisible(false);
            correct++;
        }

        controller = local_librarian.checker.userChecker.checkInquadramento(newUserInquadField.getText());
        if (controller != 0) {
            newUserInquadField.setBorder(exceptionborder);
            
            if (controller == 1) {
                refreshGenericLabel(newuserErrorInquadLabel, newuserErrorInquadLabel.getForeground(), "è vuoto");
            }
            if (controller == 2) {
                refreshGenericLabel(newuserErrorInquadLabel, newuserErrorInquadLabel.getForeground(), "inquadramento non valido");
            }

        } else {
            newUserInquadField.setBorder(LibrarianStyle.DEFAULT_MATTE_REGISTRATION);
            newuserErrorInquadLabel.setVisible(false);
            correct++;
        }

        controller = local_librarian.checker.userChecker.checkNumero(newUserTelefonoTxtField.getText());
        if (controller != 0) {
            newUserTelefonoTxtField.setBorder(exceptionborder);

            if (controller == 1) {
                refreshGenericLabel(newuserErrorNumTelLabel, newuserErrorNumTelLabel.getForeground(), "è vuoto");
            }
            if (controller == 2) {
                refreshGenericLabel(newuserErrorNumTelLabel, newuserErrorNumTelLabel.getForeground(), "lunghezza massima superata: 15");
            }
            if (controller == 3) {
                refreshGenericLabel(newuserErrorNumTelLabel, newuserErrorNumTelLabel.getForeground(), "deve contenere solo numeri");
            }

        } else {
            newUserTelefonoTxtField.setBorder(LibrarianStyle.DEFAULT_MATTE_REGISTRATION);
            newuserErrorNumTelLabel.setVisible(false);
            correct++;
        }


        return correct == NEWUSER_TOTAL_FIELD;

    }

    private void ModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyButtonActionPerformed

        ModifyDialog.setLocationRelativeTo(this);
        ModifyDialog.setEnabled(true);
        ModifyDialog.setVisible(true);

        this.setEnabled(false);

    }//GEN-LAST:event_ModifyButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed

        normalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_librarian.getLookedBooks(SearchTextField.getText()));
        
        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();

        PageTableIndex = 0;
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void NextPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextPageButtonActionPerformed

        PageTableIndex++;

        if (PageTableIndex + 1 == page_vector.size()) {
            NextPageButton.setEnabled(false);
        }

        BooksTable.clearSelection();

        BooksTable.setModel(new DefaultTableModel(page_vector.elementAt(PageTableIndex), Columns));

        PreviousButton.setEnabled(true);

        setCurrentPage(PageNumLabel,PageTableIndex);
        EliminaButton.setEnabled(false);

        BooksTable.getSelectionModel().clearSelection();
        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();
    }//GEN-LAST:event_NextPageButtonActionPerformed

    private void PreviousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousButtonActionPerformed

        PageTableIndex--;

        if (PageTableIndex == 0) {
            PreviousButton.setEnabled(false);
        }

        BooksTable.clearSelection();

        BooksTable.setModel(new DefaultTableModel(page_vector.elementAt(PageTableIndex), Columns));

        NextPageButton.setEnabled(true);

        setCurrentPage(PageNumLabel,PageTableIndex);
        EliminaButton.setEnabled(false);

        BooksTable.getSelectionModel().clearSelection();

        BooksTable.getSelectionModel().clearSelection();
        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();
    }//GEN-LAST:event_PreviousButtonActionPerformed

    private void PSWConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSWConfirmButtonActionPerformed

        MatteBorder exceptionborder = new MatteBorder(0, 0, 1, 0, LibrarianStyle.EXCEPTION_COLOR);
        Checker check = new Checker();

        boolean changeable = false;


        if (local_librarian.matchingUserIDPassword(local_librarian.getID(), OldPasswordTxtField.getPassword(), UtenteLibrarian.Librarian_Default_Type_Value)) {
            if (check.userChecker.checkPassword(NewPasswordTextField.getPassword()) == 0) {
                changeable = true;
            } else {

                refreshGenericLabel(ModifyReporterLabel, LibrarianStyle.EXCEPTION_COLOR, "Password nuova Errata");

                NewPasswordTextField.setBorder(exceptionborder);

                return;
            }
        } else {
            refreshGenericLabel(ModifyReporterLabel, LibrarianStyle.EXCEPTION_COLOR, "Password Vecchia non corrisponde");

            OldPasswordTxtField.setBorder(exceptionborder);

            return;
        }

        if (changeable) {
            local_librarian.updateUserPassword(local_librarian.getID(), NewPasswordTextField.getPassword(), UtenteLibrarian.Librarian_Default_Type_Value);

            refreshGenericLabel(ModifyReporterLabel, LibrarianStyle.SUCCESS_COLOR, "Password Cambiata con Successo");

            try {
                Thread.sleep(1600);
            } catch (InterruptedException ex) {
                Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
            }

            System.exit(0);
        }

    }//GEN-LAST:event_PSWConfirmButtonActionPerformed

    private void ModifyConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyConfirmButtonActionPerformed

        MatteBorder exceptionborder = new MatteBorder(0, 0, 1, 0, LibrarianStyle.EXCEPTION_COLOR);
        Checker check = new Checker();

        boolean CoreMod = false;
        int modified = 0;

        String success_message = "Informazioni Aggiornate: ";

        if (check.userChecker.checkEmail(ModifyEmailTextField.getText()) == 0) {
            local_librarian.updateUserInfo(local_librarian.getUser().getUserID(), "EMAIL", ModifyEmailTextField.getText(), local_librarian.getDefaultType());

            success_message = success_message + "EMAIL -> " + ModifyEmailTextField.getText() + "\n";
            modified++;
            CoreMod = true;

        } else if (check.userChecker.checkEmail(ModifyEmailTextField.getText()) == 1) {
        } else {
            ModifyEmailTextField.setBorder(exceptionborder);

            refreshGenericLabel(ModifyReporterLabel, LibrarianStyle.EXCEPTION_COLOR, "Fromato Email non Valido");

        }

        if (check.userChecker.checkNumero(ModifyNumberTextField.getText()) == 0) {
            local_librarian.updateUserInfo(local_librarian.getUser().getUserID(), "NUMERO", ModifyNumberTextField.getText(), local_librarian.getDefaultType());

            success_message = success_message + "NUMERO -> " + ModifyNumberTextField.getText() + "\n";
            modified++;
        } else if (check.userChecker.checkNumero(ModifyNumberTextField.getText()) == 1) {
        } else {
            ModifyNumberTextField.setBorder(exceptionborder);

            refreshGenericLabel(ModifyReporterLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato Numero non valido");
        }

        if (check.userChecker.checkInquadramento(ModifyInquadTextField.getText()) == 0) {
            local_librarian.updateUserInfo(local_librarian.getUser().getUserID(), "INQUADRAMENTO", ModifyInquadTextField.getText(), local_librarian.getDefaultType());

            success_message = success_message + "INQUADRAMENTO -> " + ModifyInquadTextField.getText() + "\n";
            modified++;
        } else if (check.userChecker.checkInquadramento(ModifyInquadTextField.getText()) == 1) {
        } else {
            ModifyInquadTextField.setBorder(exceptionborder);

            refreshGenericLabel(ModifyReporterLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato Inquadramento non valido");
        }

        if (modified > 0) {
            refreshGenericLabel(ModifyReporterLabel, LibrarianStyle.SUCCESS_COLOR, success_message);

            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (CoreMod) {
                local_librarian.updateUserInfo(local_librarian.getUser().getUserID(), "CONFIRMED", "0", local_librarian.getDefaultType());
                local_librarian.updateUserInfo(local_librarian.getUser().getUserID(), "CODICE", Arrays.toString(local_librarian.generateUserCode(local_librarian.getUser().getUserID())), local_librarian.getDefaultType());
                local_librarian.updateUserInfo(local_librarian.getUser().getUserID(), "TENTATIVI", "5", local_librarian.getDefaultType());

                local_librarian.sendNewInformation(local_librarian.getUser().getUserID(), success_message, local_librarian.getDefaultType());
                local_librarian.sendConfirmationCode(local_librarian.getUser().getUserID(), local_librarian.getDefaultType());

                ModifyDialog.getParent().setVisible(false);
                ModifyDialog.removeWindowListener(ModifyDialog.getWindowListeners()[0]);
                ModifyDialog.dispose();

                this.setVisible(false);
                this.dispose();
                setModifyDialog();
                new appLibrarianLoginForm().setVisible(true);

            } else {

                local_librarian.sendNewInformation(local_librarian.getUser().getUserID(), success_message, local_librarian.getDefaultType());

                ModifyDialog.setVisible(false);
                setModifyDialog();

                this.setEnabled(true);
            }
        } else {
            setModifyDialog();
        }

    }//GEN-LAST:event_ModifyConfirmButtonActionPerformed

    private void ModifyExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyExitButtonActionPerformed

        ModifyDialog.setVisible(false);
        ModifyDialog.setEnabled(false);

        setModifyDialog();

        ModifyDialog.getParent().setEnabled(true);
        ModifyDialog.getParent().setVisible(true);
    }//GEN-LAST:event_ModifyExitButtonActionPerformed

    private void DeleteAccButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAccButtonActionPerformed

        ModifyDialog.setEnabled(false);
        ModifyDialog.enableInputMethods(false);

        int result = AskinDeletingOptionPane.showConfirmDialog(ModifyDialog, "Sei sicuro di voler Eliminare questo Account ?");
        AskinDeletingOptionPane.setOptionType(YES_NO_OPTION);
        AskinDeletingOptionPane.setVisible(true);

        if (result == AskinDeletingOptionPane.YES_OPTION) {

            local_librarian.deleteUserAccount(local_librarian.getUser().getUserID(), "USERID", local_librarian.getUser().getUserType());
            AskinDeletingOptionPane.setVisible(false);
            ModifyDialog.setVisible(false);
            this.setVisible(false);
            appLibrarianLoginForm app = new appLibrarianLoginForm();
            app.setVisible(true);
        } else {

            ModifyDialog.setEnabled(true);

            AskinDeletingOptionPane.setEnabled(false);
            AskinDeletingOptionPane.setVisible(false);

        }

    }//GEN-LAST:event_DeleteAccButtonActionPerformed

    private void EliminaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminaButtonActionPerformed

        String Selected_ISBN;

        if (BooksTable.getSelectedRow() == -1) {
            EliminaButton.setEnabled(false);
            return;
        } else {
            Selected_ISBN = getSelectedISBNFromBooksTable();
        }

        EliminaOption.setVisible(true);

        int result = EliminaOption.showConfirmDialog(this, "Eliminare Libro: " + Selected_ISBN + " ?");

        if (result == EliminaOption.YES_OPTION) {
            int to_delete_isbn = Integer.parseInt(Selected_ISBN.trim());

            if (local_librarian.checkExistingEasyPrenPres(Selected_ISBN, "", 4));
            {
                for (String user_id : local_librarian.getUserIDFromPrenPrestByISBN(Selected_ISBN, 4)) {
                    local_librarian.sendDeletedPrenotazioneEmail(user_id, Selected_ISBN, 2);
                }
            }

            local_librarian.deleteBookByISBN(to_delete_isbn);

            EliminaOption.setVisible(false);
            normalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_librarian.builderBookTableModel());
            BooksTable.revalidate();
            BooksTable.getParent().repaint();
            BooksTable.repaint();

            
        } else {
            EliminaOption.setVisible(false);
        }

    }//GEN-LAST:event_EliminaButtonActionPerformed

    private void addNewBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewBookButtonActionPerformed

        addNewBookDialog.setLocationRelativeTo(this);
        addNewBookDialog.setEnabled(true);
        addNewBookDialog.setVisible(true);

        this.setEnabled(false);
        this.isAlwaysOnTop();

    }//GEN-LAST:event_addNewBookButtonActionPerformed

    private void AddBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookButtonActionPerformed

        String codice_and_title;
        
        try {
            if (checkBookFields()) {
                if (RistampaTextField.getText().isEmpty() && ScaffaleTextField.getText().isEmpty()) {
                    Libro libro = new Libro(
                            CodeTextField.getText(),
                            TitoloTextField.getText(),
                            AutoreTextField.getText(),
                            EditriceTextField.getText(),
                            PubblicazTextField.getText(),
                            CategorieComboBox.getSelectedItem().toString(),
                            LinguaTextField.getText());

                    book_creation_success = local_librarian.insertNewBook(libro);
                    codice_and_title = libro.getISBN() + ", '" + libro.getTitolo() + "' ";
                } else if (!RistampaTextField.getText().isEmpty() && ScaffaleTextField.getText().isEmpty()) {
                    Libro libro = new Libro(
                            CodeTextField.getText(),
                            TitoloTextField.getText(),
                            AutoreTextField.getText(),
                            EditriceTextField.getText(),
                            PubblicazTextField.getText(),
                            RistampaTextField.getText(),
                            CategorieComboBox.getSelectedItem().toString(),
                            LinguaTextField.getText());

                    book_creation_success = local_librarian.insertNewBook(libro);
                    codice_and_title = libro.getISBN() + ", '" + libro.getTitolo() + "' ";
                } else if (RistampaTextField.getText().isEmpty() && !ScaffaleTextField.getText().isEmpty()) {
                    Libro libro = new Libro(
                            CodeTextField.getText(),
                            TitoloTextField.getText(),
                            AutoreTextField.getText(),
                            EditriceTextField.getText(),
                            PubblicazTextField.getText(),
                             CategorieComboBox.getSelectedItem().toString(),
                            LinguaTextField.getText(),
                            Integer.parseInt(ScaffaleTextField.getText()));

                    book_creation_success = local_librarian.insertNewBook(libro);
                    codice_and_title = libro.getISBN() + ", '" + libro.getTitolo() + "' ";
                } else {

                    Libro libro = new Libro(
                            CodeTextField.getText(),
                            TitoloTextField.getText(),
                            AutoreTextField.getText(),
                            EditriceTextField.getText(),
                            PubblicazTextField.getText(),
                            RistampaTextField.getText(),
                            CategorieComboBox.getSelectedItem().toString(),
                            LinguaTextField.getText(),
                            Integer.parseInt(ScaffaleTextField.getText()));

                    book_creation_success = local_librarian.insertNewBook(libro);
                    codice_and_title = libro.getISBN() + ", '" + libro.getTitolo() + "' ";
                }

                local_librarian.sendCommunicationServer("[LIB-" + local_librarian.getID() + "] Aggiunge Libro: " + codice_and_title);
                BookInsertSuccessThread.start();

                setAddBookDialog();

            }
        } catch (RemoteException ex) {
            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        }

        PageTableIndex = 0;
        setCurrentPage(PageNumLabel,PageTableIndex);

        BooksTable.setModel(new DefaultTableModel(page_vector.elementAt(PageTableIndex), Columns));

        setAddBookDialog();

        this.setEnabled(true);
        this.revalidate();
        this.setVisible(true);
    }//GEN-LAST:event_AddBookButtonActionPerformed

    private void AnnullaNewBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnullaNewBookButtonActionPerformed

        addNewBookDialog.dispatchEvent(new WindowEvent(addNewBookDialog,WindowEvent.WINDOW_CLOSING));

        setAddBookDialog();

    }//GEN-LAST:event_AnnullaNewBookButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed

        PageTableIndex = 0;

        normalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_librarian.builderBookTableModel());
        BooksTable.revalidate();
        BooksTable.getParent().repaint();
        BooksTable.repaint();

    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void riconsegnaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riconsegnaButtonActionPerformed

        if (local_librarian.checker.userChecker.checkCodiceFiscale(prestitoTextField.getText()) != 0) {
            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato utente non valido ");
        } else if (local_librarian.checkParametricExisting("USERID", prestitoTextField.getText(), 2)) {

            String selected_ISBN = getSelectedISBNFromBooksTable();

            if (local_librarian.checkExistingEasyPrenPres(selected_ISBN, prestitoTextField.getText(), 5)) {
                local_librarian.insertPrestitoStorico(selected_ISBN, prestitoTextField.getText());
                local_librarian.deletePrestitoPrenotazioneByISBNByID(Integer.parseInt(selected_ISBN.trim()), Integer.parseInt(prestitoTextField.getText().trim()), 5);
                local_librarian.updateBookStatus(selected_ISBN, 1);

                Vector<String> UserToGetUpdated = local_librarian.getUserIDFromPrenPrestByISBN(selected_ISBN, 4);

                if (UserToGetUpdated.size() < 1) {
                    local_librarian.updateBookStatus(selected_ISBN, 1);
                } else {

                    local_librarian.sendLibroDisponibileEmail(UserToGetUpdated.elementAt(0), selected_ISBN, 2);
                    local_librarian.sendCommunicationServer("[LIB-" + local_librarian.getID() + "] Riconsegnato Libro: " + selected_ISBN);
                }

            } else {
                refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Prestito non attivo");
            }
        } else {
            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }

    }//GEN-LAST:event_riconsegnaButtonActionPerformed

    private void prestitoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prestitoButtonActionPerformed

        if (local_librarian.checker.userChecker.checkCodiceFiscale(prestitoTextField.getText()) != 0)
        {
            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato utente non valido ");
        } 
        else if (local_librarian.checkParametricExisting("USERID", prestitoTextField.getText(), 2))
        {
            String selected_ISBN = getSelectedISBNFromBooksTable();

            if (local_librarian.checkExistingEasyPrenPres(selected_ISBN, prestitoTextField.getText(), 5))
            {
                refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Prestito già attivo");
            } 
            else if (local_librarian.getBookInformationbyISBN("DISPONIBILE", selected_ISBN).equals("1"))
            {
                if (local_librarian.countPrenotazioniPrestitiByID(prestitoTextField.getText(), 5) < local_librarian.getMaxPrenotazioni())
                {
                    if (local_librarian.getPrestitoSconfinantebyID(prestitoTextField.getText()))
                    {
                        refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente Sconfinante");
                        return;
                    }
                    if (local_librarian.getUserIDFromPrenPrestByISBN(selected_ISBN, 4).size() > 0)
                    {
                        if (local_librarian.getUserIDFromPrenPrestByISBN(selected_ISBN, 4).elementAt(0).equals(prestitoTextField.getText()))
                        {
                            local_librarian.insertPrestito(selected_ISBN, prestitoTextField.getText());
                            local_librarian.updateBookStatus(selected_ISBN, 0);
                            local_librarian.deletePrestitoPrenotazioneByISBNByID(Integer.parseInt(selected_ISBN.trim()), Integer.parseInt(prestitoTextField.getText().trim()), 4);

                            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Prestito attivato");
                            local_librarian.sendCommunicationServer("[LIB-" + local_librarian.getID() + "] Attiva nuovo Prestito a: " + prestitoTextField.getText());

                            try {
                                Thread.sleep(600);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                            }

                            prestitoErrorLabel.setVisible(false);
                            prestitoTextField.setText("");

                            
                        } else {

                            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente non registrato in Prenotazione");
                        }
                    } else
                    {
                        local_librarian.insertPrestito(selected_ISBN, prestitoTextField.getText());
                        local_librarian.updateBookStatus(selected_ISBN, 0);
                        

                        refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Prestito attivato");

                        try {
                            Thread.sleep(600);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        prestitoErrorLabel.setVisible(false);
                        prestitoTextField.setText("");
                    }
                } else {
                    refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Limite Prestiti Raggiunto");
                }
            } else {
                refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Libro non Prenotabile");
            }
        } else {
            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }

    }//GEN-LAST:event_prestitoButtonActionPerformed


    private void creanuovaPrenotazioneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creanuovaPrenotazioneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creanuovaPrenotazioneTextFieldActionPerformed

    private void visualizzaPrenotazioneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizzaPrenotazioneButtonActionPerformed

        if (local_librarian.checker.userChecker.checkCodiceFiscale(creanuovaPrenotazioneTextField.getText()) != 0)
        {
            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato utente non valido");
        }
        else if (local_librarian.countPrenotazioniPrestitiByID(creanuovaPrenotazioneTextField.getText(), 4) == 0)
        {
            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Nessuna Prenotazione Presente");
        }
        else
        {
            normalizejTable(BooksTable,PreviousButton,NextPageButton,PageNumLabel,PageTableIndex,local_librarian.getPrenotazioniPrestitiByUserID(creanuovaPrenotazioneTextField.getText(),3));
            BooksTable.repaint();
        }

    }//GEN-LAST:event_visualizzaPrenotazioneButtonActionPerformed

    private void creanuovaPrenotazionerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creanuovaPrenotazionerButtonActionPerformed

        if (local_librarian.checker.userChecker.checkCodiceFiscale(creanuovaPrenotazioneTextField.getText()) != 0)
        {
            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato non valido");
        }
        else if (local_librarian.countPrenotazioniPrestitiByID(creanuovaPrenotazioneTextField.getText(), 4) > local_librarian.getMaxPrenotazioni())
        {
            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Raggiunto Massimo Prenotazioni");
        }
        else if (local_librarian.checkParametricExisting("USERID", creanuovaPrenotazioneTextField.getText(), 2))
        {

            String selected_ISBN = getSelectedISBNFromBooksTable();

            if (local_librarian.checkExistingEasyPrenPres(selected_ISBN, creanuovaPrenotazioneTextField.getText(), 4))
            {
                refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Prenotazione già esistente");
            } 
            else
            {

                local_librarian.insertPrenotazione(selected_ISBN, creanuovaPrenotazioneTextField.getText());

                refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Prenotazione Creata");
                local_librarian.sendCommunicationServer("[LIB-" + local_librarian.getID() + "] Crea Nuova Prenotazione per: " + creanuovaPrenotazioneTextField.getText());

                try {
                    Thread.sleep(600);
                } catch (InterruptedException ex) {
                    Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                }

                creanuovaPrenotazioneErrorLabel.setVisible(false);
                creanuovaPrenotazioneTextField.setText("");
            }
        } else
        {
            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }
    }//GEN-LAST:event_creanuovaPrenotazionerButtonActionPerformed

    private void disdiciPrenotazionerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disdiciPrenotazionerButtonActionPerformed

        if (local_librarian.checker.userChecker.checkCodiceFiscale(creanuovaPrenotazioneTextField.getText()) != 0)
        {
            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato non valido");
        }
        else if (local_librarian.checkParametricExisting("USERID", creanuovaPrenotazioneTextField.getText(), 2))
        {
            String selected_ISBN = getSelectedISBNFromBooksTable();

            local_librarian.deletePrestitoPrenotazioneByISBNByID(Integer.parseInt(selected_ISBN.trim()), Integer.parseInt(creanuovaPrenotazioneTextField.getText().trim()), 4);

            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Prenotazione Eliminata");

            try {
                Thread.sleep(600);
            } catch (InterruptedException ex) {
                Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
            }

            creanuovaPrenotazioneErrorLabel.setVisible(false);
            creanuovaPrenotazioneTextField.setText("");

        } else {
            refreshTooltipLabel(creanuovaPrenotazioneErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }

    }//GEN-LAST:event_disdiciPrenotazionerButtonActionPerformed

    private void deleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserButtonActionPerformed

        if (local_librarian.checker.userChecker.checkCodiceFiscale(deleteUserTextField.getText()) != 0) {
            refreshTooltipLabel(deleteUserIDErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato non valido");
        } else if (local_librarian.checkParametricExisting("USERID", deleteUserTextField.getText(), 2)) {
            
            local_librarian.deleteUserAccount(deleteUserTextField.getText(), "USERID", 2);

            refreshTooltipLabel(deleteUserIDErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Utente Eliminato");
            local_librarian.sendCommunicationServer("[LIB-" + local_librarian.getID() + "] Elimina Utente: " + deleteUserTextField.getText());
        } else {
            refreshTooltipLabel(deleteUserIDErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }

        try {
            Thread.sleep(600);
        } catch (InterruptedException ex) {
            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        }

        deleteUserIDErrorLabel.setVisible(false);
        deleteUserTextField.setText("");
    }//GEN-LAST:event_deleteUserButtonActionPerformed

    private void disattivaPrestitoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disattivaPrestitoButtonActionPerformed

        if (local_librarian.checker.userChecker.checkCodiceFiscale(prestitoTextField.getText()) != 0) {
            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato utente non valido ");
        } else if (local_librarian.checkParametricExisting("USERID", prestitoTextField.getText(), 2)) {

            String selected_ISBN = getSelectedISBNFromBooksTable();

            if (local_librarian.checkExistingEasyPrenPres(selected_ISBN, prestitoTextField.getText(), 5)) {
                local_librarian.deletePrestitoPrenotazioneByISBNByID(Integer.parseInt(selected_ISBN.trim()), Integer.parseInt(prestitoTextField.getText().trim()), 5);

                refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.SUCCESS_COLOR, "Prestito Eliminato");
                local_librarian.sendCommunicationServer("[LIB-" + local_librarian.getID() + "] Prestito Eliminato per: " + selected_ISBN);
            } else {
                refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Prestito non Presente");
            }
        } else {
            refreshTooltipLabel(prestitoErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }

    }//GEN-LAST:event_disattivaPrestitoButtonActionPerformed

    private void creaReaderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaReaderButtonActionPerformed
        
        if (local_librarian.checker.userChecker.checkCodiceFiscale(deleteUserTextField.getText()) != 0) {
            refreshTooltipLabel(deleteUserIDErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Formato non valido");
        } else if(!local_librarian.checkParametricExisting("USERID", deleteUserTextField.getText(), 2)){
                        
            newUserDialog.setVisible(true);
            newUserDialog.setAlwaysOnTop(true);
            
            newUserCodiceTxtField.setText(deleteUserTextField.getText());
        }
        else{
            refreshTooltipLabel(deleteUserIDErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Utente già nel DB");}

        try {
            Thread.sleep(600);
        } catch (InterruptedException ex) {
            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        }

        deleteUserIDErrorLabel.setVisible(false);
        deleteUserTextField.setText("");
        
    }//GEN-LAST:event_creaReaderButtonActionPerformed

    private void IndietroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IndietroButtonActionPerformed

        newUserDialog.setVisible(false);
        newUserDialog.setEnabled(false);

        setAddNewUserDialog();

        newUserDialog.getParent().setEnabled(true);
        newUserDialog.getParent().setVisible(true);
        

        
    }//GEN-LAST:event_IndietroButtonActionPerformed

    private void RegistrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrationButtonActionPerformed

        try {
            if (checkAllnewUserField()) {
                try {

                    String code = newUserCodiceTxtField.getText();
                    String nome = newUserNomeTxtField.getText();
                    String cognome = newUserCognomeTxtField.getText();
                    String inquadr = newUserInquadField.getText();
                    String tel = newUserTelefonoTxtField.getText();
                    String email = newUserEmailTxtField.getText();
                    
                    char[] newuserpsw = local_librarian.generatePassword();
                    char[] newusercode = local_librarian.generateUserCode(newUserCodiceTxtField.getText());
                    
                    Utente generico = new UtenteReader(nome, cognome, code, email, inquadr, tel, newuserpsw, newusercode );
                    
                    local_librarian.inserUser(generico);
                    
                    local_librarian.sendCommunicationServer("[LIB-" + local_librarian.getID() + "] Creazione nuovo Utente: *" + generico.getUserID() + "* Completata");
                    
                    local_librarian.sendNewPassword(generico.getUserID(), generico.getUserType());

                    setAddNewUserDialog();

                } catch (RemoteException ex) {
                    Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {

            }
        } catch (RemoteException ex) {
            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RegistrationButtonActionPerformed

    private void statisticheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statisticheButtonActionPerformed
        
        StatisticheDialog.setVisible(true);
        StatisticheDialog.setAlwaysOnTop(true);
        StatisticheDialog.setLocationRelativeTo(this);
        
        
    }//GEN-LAST:event_statisticheButtonActionPerformed

    private void statiticheUserPrestitiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statiticheUserPrestitiButtonActionPerformed
        
        
        if (local_librarian.checker.userChecker.checkCodiceFiscale(StatisticheUserIDTextField.getText()) != 0) {
            
            refreshTooltipLabel(statisticheUserError, LibrarianStyle.EXCEPTION_COLOR, "Formato non valido");
            
        } else if (local_librarian.checkParametricExisting("USERID", StatisticheUserIDTextField.getText(), 2)) {
            
            normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getPrenotazioniPrestitiByUserID(StatisticheUserIDTextField.getText(), 2));
            
        } else {
            
            refreshTooltipLabel(statisticheUserError, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }

        try {
            Thread.sleep(600);
        } catch (InterruptedException ex) {
            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        }

        statisticheUserError.setVisible(false);
        StatisticheUserIDTextField.setText("");
    }//GEN-LAST:event_statiticheUserPrestitiButtonActionPerformed

    private void statisticheUserStoricoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statisticheUserStoricoButtonActionPerformed
        
         
        if (local_librarian.checker.userChecker.checkCodiceFiscale(StatisticheUserIDTextField.getText()) != 0) {
            refreshTooltipLabel(statisticheUserError, LibrarianStyle.EXCEPTION_COLOR, "Formato non valido");
            
        } else if (local_librarian.checkParametricExisting("USERID", StatisticheUserIDTextField.getText(), 2)) {
            
            normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getPrenotazioniPrestitiByUserID(StatisticheUserIDTextField.getText(), 3));
 
        } else {
            refreshTooltipLabel(statisticheUserError, LibrarianStyle.EXCEPTION_COLOR, "Utente non nel DB");
        }

        try {
            Thread.sleep(600);
        } catch (InterruptedException ex) {
            Logger.getLogger(appLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        }

        statisticheUserError.setVisible(false);
        StatisticheUserIDTextField.setText("");
    }//GEN-LAST:event_statisticheUserStoricoButtonActionPerformed

    private void IndietroStatisticheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IndietroStatisticheButtonActionPerformed
        
        StatisticheDialog.setVisible(false);
        this.setEnabled(true);
        this.setAlwaysOnTop(true);
    }//GEN-LAST:event_IndietroStatisticheButtonActionPerformed

    private void statiticheGeneraliPrestitiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statiticheGeneraliPrestitiButtonActionPerformed
        
        normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getPrenotazioniPrestitiByUserID(null, 2));
        
    }//GEN-LAST:event_statiticheGeneraliPrestitiButtonActionPerformed

    private void statiticheGeneraliStoricoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statiticheGeneraliStoricoButtonActionPerformed
        
        normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getPrenotazioniPrestitiByUserID(null, 1));
    }//GEN-LAST:event_statiticheGeneraliStoricoButtonActionPerformed

    private void perinquadramentoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perinquadramentoRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_perinquadramentoRadioButtonActionPerformed

    private void mostraWithSortingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostraWithSortingButtonActionPerformed
       
        if(percategoriaRadioButton.isSelected())
        {
            normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getClassificaLibri(1));
        }
        else if(perinquadramentoRadioButton.isSelected())
        {

            normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getClassificaLibri(2));
        }
        else if(assolutaRadioButton.isSelected())
        {

            normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getClassificaLibri(3));
        }
        else
        {
            refreshTooltipLabel(mostraErrorLabel, LibrarianStyle.EXCEPTION_COLOR, "Solo 1 categoria Ammessa");
        }
    }//GEN-LAST:event_mostraWithSortingButtonActionPerformed

    private void statiticheGeneraliPrenotazioniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statiticheGeneraliPrenotazioniActionPerformed
      
        normalizejTable(statsTable,statsPreviousPageTableButton,statsNextPageTableButton,statsPageNumTableLabel,StatsPageIndex,local_librarian.getPrenotazioniPrestitiByUserID(null, 3));
    }//GEN-LAST:event_statiticheGeneraliPrenotazioniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(appLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(appLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(appLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(appLibrarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new appLibrarian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBookButton;
    private javax.swing.JLabel AnnoError;
    private javax.swing.JButton AnnullaNewBookButton;
    private javax.swing.JOptionPane AskinDeletingOptionPane;
    private javax.swing.JLabel AutorError;
    private javax.swing.JTextField AutoreTextField;
    private javax.swing.JTable BooksTable;
    private javax.swing.JLabel CategoriaError;
    private javax.swing.JComboBox<String> CategorieComboBox;
    private javax.swing.JLabel CodeError;
    private javax.swing.JTextField CodeTextField;
    private javax.swing.JLabel CodiceLabel;
    private javax.swing.JLabel CognomeLabel;
    private javax.swing.JButton DeleteAccButton;
    private javax.swing.JLabel DynamicCodice;
    private javax.swing.JLabel DynamicCognome;
    private javax.swing.JLabel DynamicEmail;
    private javax.swing.JLabel DynamicLabelCognome;
    private javax.swing.JLabel DynamicLabelEmail;
    private javax.swing.JLabel DynamicLabelID;
    private javax.swing.JLabel DynamicLabelInquadramento;
    private javax.swing.JLabel DynamicLabelNome;
    private javax.swing.JLabel DynamicLabelNumber;
    private javax.swing.JLabel DynamicNome;
    private javax.swing.JLabel DynamicNumero;
    private javax.swing.JLabel DynamicRuolo;
    private javax.swing.JLabel EditriceError;
    private javax.swing.JTextField EditriceTextField;
    private javax.swing.JButton EliminaButton;
    private javax.swing.JOptionPane EliminaOption;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JButton IndietroButton;
    private javax.swing.JButton IndietroStatisticheButton;
    private javax.swing.JPanel InputPanel;
    private javax.swing.JLabel LinguaError;
    private javax.swing.JTextField LinguaTextField;
    private javax.swing.JButton ModifyButton;
    private javax.swing.JButton ModifyConfirmButton;
    private javax.swing.JDialog ModifyDialog;
    private javax.swing.JTextField ModifyEmailTextField;
    private javax.swing.JButton ModifyExitButton;
    private javax.swing.JTextField ModifyInquadTextField;
    private javax.swing.JPanel ModifyLayer1;
    private javax.swing.JTextField ModifyNumberTextField;
    private javax.swing.JLabel ModifyReporterLabel;
    private javax.swing.JLabel ModifyTitle;
    private javax.swing.JLabel ModifyTitle1;
    private javax.swing.JPasswordField NewPasswordTextField;
    private javax.swing.JButton NextPageButton;
    private javax.swing.JLabel NomeLabel;
    private javax.swing.JLabel NumeroLabel;
    private javax.swing.JPasswordField OldPasswordTxtField;
    private javax.swing.JPanel OptionsPanel;
    private javax.swing.JButton PSWConfirmButton;
    private javax.swing.JLabel PageNumLabel;
    private javax.swing.JPanel PasswordModifyContext;
    private javax.swing.JPanel PrenotazioneCreationPanel;
    private javax.swing.JPanel PrenotazionePanel;
    private javax.swing.JButton PreviousButton;
    private javax.swing.JTextField PubblicazTextField;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton RegistrationButton;
    private javax.swing.JLabel RegistrationH1;
    private javax.swing.JLabel ReporterNewBookLabel;
    private javax.swing.JLabel RistampaError;
    private javax.swing.JTextField RistampaTextField;
    private javax.swing.JLabel RuoloLabel;
    private javax.swing.JLabel ScaffaleError;
    private javax.swing.JTextField ScaffaleTextField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JDialog StatisticheDialog;
    private javax.swing.JPanel StatisticheLayer1;
    private javax.swing.JTextField StatisticheUserIDTextField;
    private javax.swing.JPanel TablePanel;
    private javax.swing.JLabel TitleError;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel TitleLabel1;
    private javax.swing.JLabel TitleUserLabel;
    private javax.swing.JLabel TitoloCambioPsw;
    private javax.swing.JTextField TitoloTextField;
    private javax.swing.JPanel UserContextPanel;
    private javax.swing.JPanel UserDeletePanel;
    private javax.swing.JPanel UserEditableInfo;
    private javax.swing.JPanel UserLockedInfo;
    private javax.swing.JButton addNewBookButton;
    private javax.swing.JDialog addNewBookDialog;
    private javax.swing.JPanel appMainPanel;
    private javax.swing.JRadioButton assolutaRadioButton;
    private javax.swing.JLabel codicefiscaleLabel2;
    private javax.swing.JLabel cognomeLabel2;
    private javax.swing.JButton creaReaderButton;
    private javax.swing.JLabel creanuovaPrenotazioneErrorLabel;
    private javax.swing.JTextField creanuovaPrenotazioneTextField;
    private javax.swing.JButton creanuovaPrenotazionerButton;
    private javax.swing.JButton deleteUserButton;
    private javax.swing.JLabel deleteUserIDErrorLabel;
    private javax.swing.JTextField deleteUserTextField;
    private javax.swing.JButton disattivaPrestitoButton;
    private javax.swing.JLabel discorsiveDeleteuserLabel;
    private javax.swing.JLabel discorsivecreanuovaPrenotazioneLabel1;
    private javax.swing.JButton disdiciPrenotazionerButton;
    private javax.swing.JLabel emailLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel mostraErrorLabel;
    private javax.swing.JButton mostraWithSortingButton;
    private javax.swing.JPanel newBookLayer1;
    private javax.swing.JPanel newBookLayer2;
    private javax.swing.JPanel newBookLayer3;
    private javax.swing.JLabel newPswLabel;
    private javax.swing.JTextField newUserCodiceTxtField;
    private javax.swing.JTextField newUserCognomeTxtField;
    private javax.swing.JDialog newUserDialog;
    private javax.swing.JTextField newUserEmailTxtField;
    private javax.swing.JTextField newUserInquadField;
    private javax.swing.JTextField newUserNomeTxtField;
    private javax.swing.JPanel newUserPanel1;
    private javax.swing.JPanel newUserPanel2;
    private javax.swing.JTextField newUserTelefonoTxtField;
    private javax.swing.JLabel newuserErrorCodiceLabel;
    private javax.swing.JLabel newuserErrorCognomeLabel;
    private javax.swing.JLabel newuserErrorEmailLabel;
    private javax.swing.JLabel newuserErrorInquadLabel;
    private javax.swing.JLabel newuserErrorNomeLabel;
    private javax.swing.JLabel newuserErrorNumTelLabel;
    private javax.swing.JLabel newuserInquadramentoLabel;
    private javax.swing.JLabel newuserSuccessLabel;
    private javax.swing.JLabel newvalLabel;
    private javax.swing.JLabel nomeLabel2;
    private javax.swing.JLabel oldPswLabel;
    private javax.swing.JLabel oldvalLabel;
    private javax.swing.JLabel optionalFieldsLabel;
    private javax.swing.JRadioButton percategoriaRadioButton;
    private javax.swing.JRadioButton perinquadramentoRadioButton;
    private javax.swing.JButton prestitoButton;
    private javax.swing.JLabel prestitoDiscorsiveLabel;
    private javax.swing.JLabel prestitoDiscorsiveLabel1;
    private javax.swing.JLabel prestitoErrorLabel;
    private javax.swing.JTextField prestitoTextField;
    private javax.swing.JButton riconsegnaButton;
    private javax.swing.JLabel staticLabeTitle;
    private javax.swing.JLabel staticLabelAutore;
    private javax.swing.JLabel staticLabelCategoria;
    private javax.swing.JLabel staticLabelCode;
    private javax.swing.JLabel staticLabelCognome;
    private javax.swing.JLabel staticLabelEditrice;
    private javax.swing.JLabel staticLabelEmail;
    private javax.swing.JLabel staticLabelID;
    private javax.swing.JLabel staticLabelInquadramento;
    private javax.swing.JLabel staticLabelLingua;
    private javax.swing.JLabel staticLabelNome;
    private javax.swing.JLabel staticLabelNumber;
    private javax.swing.JLabel staticLabelPubblicaz;
    private javax.swing.JLabel staticLabelRistampa;
    private javax.swing.JLabel staticLabelScaffale;
    private javax.swing.JButton statisticheButton;
    private javax.swing.JLabel statisticheUserError;
    private javax.swing.JButton statisticheUserStoricoButton;
    private javax.swing.JButton statiticheGeneraliPrenotazioni;
    private javax.swing.JButton statiticheGeneraliPrestitiButton;
    private javax.swing.JButton statiticheGeneraliStoricoButton;
    private javax.swing.JButton statiticheUserPrestitiButton;
    private javax.swing.JButton statsNextPageTableButton;
    private javax.swing.JLabel statsPageNumTableLabel;
    private javax.swing.JButton statsPreviousPageTableButton;
    private javax.swing.JTable statsTable;
    private javax.swing.JLabel telephoneLabel2;
    private javax.swing.JButton visualizzaPrenotazioneButton;
    // End of variables declaration//GEN-END:variables
}
